<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:PdfViewer="clr-namespace:Syncfusion.Windows.PdfViewer;assembly=Syncfusion.PdfViewer.WPF"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf" 
    xmlns:SfTools="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Shared.Wpf"
    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
    x:Class="MyNotebook.MainWindow"    
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="901.509" BorderThickness="0">

    <Window.Resources>
        <!-- ________________________________________________________________ -->
        <!-- _______________________ DATA CONVERTERS ________________________ -->
        <!-- ________________________________________________________________ -->
        <syncfusion:FontFamilyStringConverter x:Key="FontFamilyStringConverter"/>
        <syncfusion:UnderlineToggleConverter x:Key="UnderlineToggleConverter"/>
        <syncfusion:SingleStrikeThroughToggleConverter x:Key="SingleStrikeThroughToggleConverter"/>
        <syncfusion:LeftAlignmentToggleConverter x:Key="LeftAlignmentToggleConverter"/>
        <syncfusion:RightAlignmentToggleConverter x:Key="RightAlignmentToggleConverter"/>
        <syncfusion:CenterAlignmentToggleConverter x:Key="CenterAlignmentToggleConverter"/>
        <syncfusion:JustifyAlignmentToggleConverter x:Key="JustifyAlignmentToggleConverter"/>
        <syncfusion:ColorToBrushConverter x:Key="ColorToBrushConverter" />
        <syncfusion:HighlightColorToggleConverter x:Key="HighlightColorConverter"/>
        <Image x:Key="PopupCommentIcon" Source="Icons/Icon-awesome-comments.png"/>
        <Image x:Key="PopupCommentIconDisabled" Source="Icons/Icon awesome-comments-disabled.png"/>
        <!-- ________________________________________________________________ -->
        <!-- ______________________ MAIN MENU TEMPLATE ______________________ -->
        <!-- ________________________________________________________________ -->
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
        <Style x:Key="MainMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="2,0"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                    <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    <Setter Property="Padding" Value="2,0"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SeparatorStyle1" TargetType="{x:Type Separator}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
            <Setter Property="Margin" Value="0,2,0,2"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="14" SnapsToDevicePixels="true" Margin="2,0,-15,-8" VerticalAlignment="Bottom"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ________________________________________________________________ -->
        <!-- ____ SIMPLE BUTTON TEMPLATE (used in Notebook Home toolbar) ____ -->
        <!-- ________________________________________________________________ -->
        <Style x:Key="ButtonStyleNotebook" TargetType="{x:Type SfTools:ButtonAdv}">
            <Setter Property="Foreground" Value="#FF1B293E"/>
            <Setter Property="Label" Value="Button"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type SfTools:ButtonAdv}">
                        <Border x:Name="ItemBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" MinHeight="17" SnapsToDevicePixels="True" Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="19" Width="18" MinWidth="18" ScrollViewer.VerticalScrollBarVisibility="Disabled" Padding="0">
                            <Border.Resources>
                                <SfTools:HorizontalContentToTextAlignmentConverter x:Key="TextAlignmentConverter"/>
                            </Border.Resources>
                            <Border x:Name="PART_ImageBorder" Grid.Column="0" Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter x:Name="SmallIconContent" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding}" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="18" Height="21" ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                                <Setter Property="MinHeight" Value="17"/>
                                <Setter Property="MinWidth" Value="20"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ItemBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF34E7E4" Offset="0.948"/>
                                            <GradientStop Color="#FF34E7E4"/>
                                            <GradientStop Color="#FEC1FFFF" Offset="0.213"/>
                                            <GradientStop Color="#FE85F4F3"/>
                                            <GradientStop Color="#FE77F2F1" Offset="0.813"/>
                                            <GradientStop Color="#FDB8FDFD" Offset="0.43"/>
                                            <GradientStop Color="#FD84F4F3" Offset="0.661"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="#FF3C40C6"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="False"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="ItemBorder" >
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF34E7E4"/>
                                            <GradientStop Color="#FEAFFFFF" Offset="0.857"/>
                                            <GradientStop Color="#FEBFFFFF" Offset="0.57"/>
                                            <GradientStop Color="#FE7BF1F0" Offset="1"/>
                                            <GradientStop Color="#FE63ECEA" Offset="0.083"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="#00d8d6"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsCheckable" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="#FF34E7E4"/>
                                <Setter Property="Background" TargetName="ItemBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF34E7E4"/>
                                            <GradientStop Color="#FEAFFFFF" Offset="0.857"/>
                                            <GradientStop Color="#FEBFFFFF" Offset="0.57"/>
                                            <GradientStop Color="#FE7BF1F0" Offset="1"/>
                                            <GradientStop Color="#FE63ECEA" Offset="0.083"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="ItemBorder" Value="0.5"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IconTemplate" Value="{x:Null}"/>
                                    <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ContentTemplate" TargetName="SmallIconContent">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Image x:Name="smallimage" Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Tag" TargetName="SmallIconContent" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ________________________________________________________________ -->
        <!-- ___ SIMPLE BUTTON TEMPLATE (used in Notebook Insert toolbar) ____ -->
        <!-- ________________________________________________________________ -->
        <Style x:Key="ButtonStyleNotebookInsert" TargetType="{x:Type SfTools:ButtonAdv}">
            <Setter Property="Foreground" Value="#FF1B293E"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Label" Value="sdf"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type SfTools:ButtonAdv}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="ItemBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" MinHeight="17" SnapsToDevicePixels="True" Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="19" Width="18" MinWidth="18" ScrollViewer.VerticalScrollBarVisibility="Disabled" Padding="0">
                                <Border.Resources>
                                    <SfTools:HorizontalContentToTextAlignmentConverter x:Key="TextAlignmentConverter"/>
                                </Border.Resources>
                                <Border x:Name="PART_ImageBorder" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ContentPresenter x:Name="SmallIconContent" ContentTemplate="{TemplateBinding IconTemplate}" Content="{Binding}" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                                <Setter Property="MinHeight" Value="21"/>
                                <Setter Property="MinWidth" Value="20"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ItemBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFC048" Offset="0.948"/>
                                            <GradientStop Color="#FFFBE694" Offset="0.205"/>
                                            <GradientStop Color="#FFFFD32A"/>
                                            <GradientStop Color="#FFFFD32A" Offset="0.813"/>
                                            <GradientStop Color="#FFFBE48C" Offset="0.423"/>
                                            <GradientStop Color="#FFFFDD59" Offset="0.661"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="#FFFFAD10"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="syncfusion:SkinStorage.EnableTouch" Value="False"/>
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="ItemBorder" >
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFC048"/>
                                            <GradientStop Color="#FFFDE485" Offset="0.883"/>
                                            <GradientStop Color="#FFFFEEAD" Offset="0.577"/>
                                            <GradientStop Color="#FFFFD32A" Offset="1"/>
                                            <GradientStop Color="#FFFFD32A" Offset="0.046"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="#FFFFC048"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsCheckable" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="ItemBorder" Value="#FFFFC048"/>
                                <Setter Property="Background" TargetName="ItemBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFC048"/>
                                            <GradientStop Color="#FFFDE485" Offset="0.883"/>
                                            <GradientStop Color="#FFFFEEAD" Offset="0.577"/>
                                            <GradientStop Color="#FFFFD32A" Offset="1"/>
                                            <GradientStop Color="#FFFFD32A" Offset="0.046"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="ItemBorder" Value="0.5"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IconTemplate" Value="{x:Null}"/>
                                    <Condition Property="IconTemplateSelector" Value="{x:Null}"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ContentTemplate" TargetName="SmallIconContent">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Image x:Name="smallimage" Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}" Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Tag" TargetName="SmallIconContent" Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ____________________________________________________________________________ -->
        <!-- _______ COMBOBOX/TOGGLE BUTTON TEMPLATE (used in Notebook Font Tools) ______ -->
        <!-- ____________________________________________________________________________ -->
        <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#f53b57"/>
        <SolidColorBrush  x:Key="ComboBox.MouseOver.Background" Color="#FE85F4F1"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#00d8d6"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#00d8d6"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" Color="#FE85F4F1"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#00d8d6"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#f53b57"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Background" Color="#FF34E7E4"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#00d8d6"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#00d8d6"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Background" Color="#FF34E7E4"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#00d8d6"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <DataTemplate x:Key="FontFamilyList">
            <Grid>
                <TextBlock Text="{Binding}" FontFamily="{Binding}" FontSize="12"/>
            </Grid>
        </DataTemplate>

        <Style x:Key="ComboBoxToggleButtonFont" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBox.Static.Background}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ____________________________________________________________________________ -->
        <!-- _______ COMBOBOX/TOGGLE BUTTON TEMPLATE (used in Notebook Font Tools) ______ -->
        <!-- ____________________________________________________________________________ -->
        <ControlTemplate x:Key="ComboBoxToggleButtonFontPopupContainer" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,8,0"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButtonFont}"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <!-- ____________________________________________________________________________ -->
        <!-- _______ COMBOBOX/TOGGLE BUTTON TEMPLATE (used in Notebook Font Tools) ______ -->
        <!-- ____________________________________________________________________________ -->
        <Style x:Key="ComboBoxToggleFontHeaderStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,8,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxToggleButtonFontPopupContainer}"/>
        </Style>
        <!-- ____________________________________________________________________________ -->
        <!-- _______ COMBOBOX/TOGGLE BUTTON TEMPLATE (used in Notebook Font Tools) ______ -->
        <!-- ____________________________________________________________________________ -->
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background" Color="#4085f1ef"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border" Color="#A885f1ef"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="#4d85f1ef"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border" Color="#FF85f1ef"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background" Color="#4d85f1ef"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border" Color="#9985f1ef"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border" Color="#FF85f1ef"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background" Color="#4d85f1ef"/>
        <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border" Color="#FF85f1ef"/>
        <Style x:Key="ComboBoxToggleFontItemContainerStyle" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="8,2,12,2"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="ControlBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="ControlBorder" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ControlBorder" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="ControlBorder" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ControlBorder" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
                                <Setter Property="BorderBrush" TargetName="ControlBorder" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ControlBorder" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                                <Setter Property="BorderBrush" TargetName="ControlBorder" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ControlBorder" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="ControlBorder" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="ControlBorder" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsKeyboardFocused" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ControlBorder" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                                <Setter Property="BorderBrush" TargetName="ControlBorder" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ____________________________________________________________________________ -->
        <!-- ________ COLOR PICKER TEMPLATE (used in Notebook Font Color Picker) ________ -->
        <!-- ____________________________________________________________________________ -->
        <Style x:Key="ColorPickerButtonStyle" TargetType="{x:Type SfTools:ColorPickerPalette}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush"  Value="Transparent" />
            <Setter Property="MouseOverBackground" Value="Transparent">
            </Setter>
            <Setter Property="MoreColorsIcon">
                <Setter.Value>
                    <BitmapImage UriSource="pack://application:,,,/Syncfusion.Shared.WPF;component/Images/MoreColorsIcon.png"/>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="MoreColorsIconSize" Value="16,16"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type SfTools:ColorPickerPalette}" >
                        <Grid x:Name="OuterGrid" Margin="0,0,0,0" Width="Auto" >
                            <Border x:Name="ColorPaletteBorder" Margin="0"  Width="32">
                                <Grid x:Name="lay" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="21">
                                    <Grid.Resources>
                                        <ItemsPanelTemplate x:Key="ItemPanelTemplate">
                                            <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                        <ItemsPanelTemplate x:Key="ItemPanelTemplate2">
                                            <StackPanel IsItemsHost="True" Orientation="Vertical"/>
                                        </ItemsPanelTemplate>
                                    </Grid.Resources>
                                    <ContentPresenter x:Name="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Margin="0,-1,9,0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto" Width="18"/>
                                    <Border x:Name="ColorPickerBorder" BorderBrush="Transparent" BorderThickness="1" Focusable="True" SnapsToDevicePixels="True" Margin="0,0,0,0" UseLayoutRounding="True" CornerRadius="3">
                                        <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Height="21" Width="32">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="ColorBorder" BorderBrush="Transparent" BorderThickness="1" Grid.Column="0" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="0" Width="32" Grid.ColumnSpan="2">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Transparent" Offset="0.835"/>
                                                        <GradientStop Color="Transparent" Offset="0.129"/>
                                                        <GradientStop Color="Transparent" Offset="0.5"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Border x:Name="UpDownBorder" BorderBrush="Transparent" BorderThickness="1" Grid.Column="0" Margin="0" SnapsToDevicePixels="True" HorizontalAlignment="Center" Width="32" VerticalAlignment="Center" Height="18" Grid.ColumnSpan="1" Padding="0">
                                                <Path x:Name="UpDownBorderArrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="#FF606060" HorizontalAlignment="Right" Margin="0,2,4,0" VerticalAlignment="Center"></Path>
                                            </Border>
                                        </Grid>
                                    </Border>
                                    <Popup x:Name="pop" Focusable="True" >
                                        <Border x:Name="b" BorderBrush="#FF646464" BorderThickness="0.5" Background="White">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <Border x:Name="Automatic1" BorderThickness="1" CornerRadius="1" FocusVisualStyle="{x:Null}" Focusable="True" Margin="2" Grid.Row="0" Visibility="{TemplateBinding AutomaticColorVisibility}">
                                                    <Border.Background>
                                                        <SolidColorBrush Color="#FFF0F0F0"/>
                                                    </Border.Background>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border x:Name="AutoBorder1" BorderBrush="#FFD9D9D9" BorderThickness="1" Grid.Column="0" CornerRadius="2">
                                                            <Border x:Name="AutoBorder2" BorderBrush="#FFD9D9D9" BorderThickness="1" Background="#FF34e7e4" Grid.Column="0">
                                                                <Border x:Name="aborder" Background="{TemplateBinding AutomaticColor}" Grid.Column="0" Height="{TemplateBinding BorderHeight}" Width="{TemplateBinding BorderWidth}"/>
                                                            </Border>
                                                        </Border>
                                                        <TextBlock Grid.Column="1" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Left" Margin="6,0,0,0" Padding="2" Text="{Binding AutomaticText}" VerticalAlignment="Center"><Run Text="Automatic"/></TextBlock>
                                                    </Grid>
                                                </Border>
                                                <ItemsControl x:Name="ColorArea" IsTabStop="False" Margin="2" Grid.Row="1">
                                                    <SfTools:ColorGroup x:Name="item1" HeaderName="{Binding ThemeColorsText}" IsTabStop="False" ThemeHeaderForeGround="{TemplateBinding ThemeHeaderForeGround}" ThemeHeaderBackGround="#FFF0F0F0"/>
                                                    <SfTools:ColorGroup x:Name="item2" HeaderName="{Binding StandardColorsText}" IsTabStop="False" ThemeHeaderForeGround="{TemplateBinding ThemeHeaderForeGround}" ThemeHeaderBackGround="#FFF0F0F0"/>
                                                    <SfTools:ColorGroup x:Name="item3" HeaderName="{Binding RecentlyUsedText}" IsTabStop="False" ThemeHeaderForeGround="{TemplateBinding ThemeHeaderForeGround}" ThemeHeaderBackGround="#FFF0F0F0"/>
                                                </ItemsControl>
                                                <Border x:Name="NoColor" FocusVisualStyle="{x:Null}" Focusable="True" Height="{Binding Height, ElementName=Automatic1, Mode=OneWay}" Margin="2" Grid.Row="2" Visibility="{TemplateBinding NoColorVisibility}">
                                                    <Border.Background>
                                                        <SolidColorBrush Color="#4d85f1ef"/>
                                                    </Border.Background>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Border BorderBrush="#4d85f1ef" BorderThickness="1" Grid.Column="0" CornerRadius="2" Margin="2,2,0,2">
                                                            <Border BorderBrush="#4d85f1ef" BorderThickness="1" Background="#FF34e7e4" Grid.Column="0">
                                                                <Border Background="White" Grid.Column="0" Height="{TemplateBinding BorderHeight}" Width="{TemplateBinding BorderWidth}"/>
                                                            </Border>
                                                        </Border>
                                                        <TextBlock Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Left" Margin="8,0,0,0" Padding="2" Text="{Binding NoColorText}" VerticalAlignment="Center"><Run Text="No Color"/></TextBlock>
                                                    </Grid>
                                                </Border>
                                                <Border BorderBrush="#FFD9D9D9" BorderThickness="1" Margin="2,0" Grid.Row="3"/>
                                                <Border x:Name="MoreColors1" FocusVisualStyle="{x:Null}" Focusable="True" Height="{Binding Height, ElementName=Automatic1, Mode=OneWay}" Margin="2" Grid.Row="4">
                                                    <Border.Background>
                                                        <SolidColorBrush Color="#4d85f1ef"/>
                                                    </Border.Background>
                                                    <Border.Visibility>
                                                        <MultiBinding UpdateSourceTrigger="Default">
                                                            <MultiBinding.Converter>
                                                                <SfTools:MoreColorVisibilityconverter/>
                                                            </MultiBinding.Converter>
                                                            <Binding Path="IsStandardTabVisible" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                            <Binding Path="IsCustomTabVisible" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                            <Binding Path="MoreColorOptionVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                        </MultiBinding>
                                                    </Border.Visibility>
                                                    <Grid x:Name="MoreColorsGrid">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Image x:Name="morecolorsimage" Grid.Column="0" Margin="1,3,4,0" Source="{TemplateBinding MoreColorsIcon}">
                                                            <Image.Height>
                                                                <Binding ConverterParameter="height" Path="MoreColorsIconSize" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <SfTools:SizeToDoubleConverter/>
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Image.Height>
                                                            <Image.Width>
                                                                <Binding ConverterParameter="width" Path="MoreColorsIconSize" RelativeSource="{RelativeSource TemplatedParent}">
                                                                    <Binding.Converter>
                                                                        <SfTools:SizeToDoubleConverter/>
                                                                    </Binding.Converter>
                                                                </Binding>
                                                            </Image.Width>
                                                        </Image>
                                                        <TextBlock Grid.Column="1" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" HorizontalAlignment="Left" Margin="8,0,0,0" Padding="2" Text="{Binding MoreColorsText}" VerticalAlignment="Center"><Run Text="More Colors..."/></TextBlock>
                                                    </Grid>
                                                </Border>
                                            </Grid>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="syncfusion:SkinStorage.EnableTouch" Value="True">
                                <Setter Property="FontSize" Value="18"/>
                                <Setter Property="MinHeight" TargetName="MoreColors1" Value="40"/>
                                <Setter Property="Margin" TargetName="morecolorsimage" Value="5,3,9,0"/>
                                <Setter Property="MoreColorsIconSize" Value="20,20"/>
                                <Setter Property="IconSize" Value="20,20"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter Property="IsTabStop" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" SourceName="AutoBorder1" Value="True">
                                <Setter Property="BorderBrush" TargetName="AutoBorder1" Value="Transparent"/>
                                <Setter Property="Background" TargetName="Automatic1" Value="#FF34E7E4">
                                </Setter>
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" SourceName="Automatic1" Value="True">
                                <Setter Property="BorderBrush" TargetName="AutoBorder1" Value="#FF3c40c6"/>
                                <Setter Property="Background" TargetName="AutoBorder2" Value="#1A3c40c6"/>
                                <Setter Property="Background" TargetName="Automatic1" Value="#FF34E7E4">
                                </Setter>
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                                <Setter Property="BorderBrush" TargetName="Automatic1" Value="#FF3c40c6"/>
                            </Trigger>
                            <Trigger Property="IsFocused" SourceName="Automatic1" Value="True">
                                <Setter Property="BorderBrush" TargetName="AutoBorder1" Value="#FF3c40c6"/>
                                <Setter Property="Background" TargetName="AutoBorder2" Value="#1A3c40c6"/>
                                <Setter Property="Background" TargetName="Automatic1">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF7AFBF9"/>
                                            <GradientStop Color="#FED9FFFF" Offset="0.913"/>
                                            <GradientStop Color="#FEF2FFFF" Offset="0.522"/>
                                            <GradientStop Color="#FE99FFFE" Offset="1"/>
                                            <GradientStop Color="#FEDEFFFE" Offset="0.043"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Automatic1" Value="#FEd2dae2"/>
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                            </Trigger>
                            <Trigger Property="IsAutomaticBorderPressed" Value="True">
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                                <Setter Property="BorderBrush" TargetName="AutoBorder1" Value="#f53b57"/>
                                <Setter Property="Background" TargetName="AutoBorder2">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF7AFBF9"/>
                                            <GradientStop Color="#FED9FFFF" Offset="0.913"/>
                                            <GradientStop Color="#FEF2FFFF" Offset="0.522"/>
                                            <GradientStop Color="#FE99FFFE" Offset="1"/>
                                            <GradientStop Color="#FEDEFFFE" Offset="0.043"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="Automatic1">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF7AFBF9"/>
                                            <GradientStop Color="#FED9FFFF" Offset="0.913"/>
                                            <GradientStop Color="#FEF2FFFF" Offset="0.522"/>
                                            <GradientStop Color="#FE99FFFE" Offset="1"/>
                                            <GradientStop Color="#FEDEFFFE" Offset="0.043"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="Automatic1" Value="#FF34E7E4"/>
                                
                            </Trigger>
                            <Trigger Property="IsMouseOver" SourceName="MoreColors1" Value="True">
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                                <Setter Property="Background" TargetName="MoreColors1">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF7AFBF9"/>
                                            <GradientStop Color="#FED9FFFF" Offset="0.913"/>
                                            <GradientStop Color="#FEF2FFFF" Offset="0.522"/>
                                            <GradientStop Color="#FE99FFFE" Offset="1"/>
                                            <GradientStop Color="#FEDEFFFE" Offset="0.043"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="MoreColors1" Value="#FEd2dae2"/>
                            </Trigger>
                            <Trigger Property="IsFocused" SourceName="MoreColors1" Value="True">
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                                <Setter Property="Background" TargetName="MoreColors1">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF7AFBF9"/>
                                            <GradientStop Color="#FED9FFFF" Offset="0.913"/>
                                            <GradientStop Color="#FEF2FFFF" Offset="0.522"/>
                                            <GradientStop Color="#FE99FFFE" Offset="1"/>
                                            <GradientStop Color="#FEDEFFFE" Offset="0.043"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="MoreColors1" Value="#FEd2dae2"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" SourceName="NoColor" Value="True">
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                                <Setter Property="Background" TargetName="NoColor">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF7AFBF9"/>
                                            <GradientStop Color="#FED9FFFF" Offset="0.913"/>
                                            <GradientStop Color="#FEF2FFFF" Offset="0.522"/>
                                            <GradientStop Color="#FE99FFFE" Offset="1"/>
                                            <GradientStop Color="#FEDEFFFE" Offset="0.043"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="NoColor" Value="#FEd2dae2"/>
                            </Trigger>
                            <Trigger Property="IsFocused" SourceName="NoColor" Value="True">
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                                <Setter Property="Background" TargetName="NoColor">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF7AFBF9"/>
                                            <GradientStop Color="#FED9FFFF" Offset="0.913"/>
                                            <GradientStop Color="#FEF2FFFF" Offset="0.522"/>
                                            <GradientStop Color="#FE99FFFE" Offset="1"/>
                                            <GradientStop Color="#FEDEFFFE" Offset="0.043"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="NoColor" Value="#FEd2dae2"/>
                            </Trigger>
                            <Trigger Property="IsMoreColorsBorderPressed" Value="True">
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                                <Setter Property="Background" TargetName="MoreColors1">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF7AFBF9"/>
                                            <GradientStop Color="#FED9FFFF" Offset="0.913"/>
                                            <GradientStop Color="#FEF2FFFF" Offset="0.522"/>
                                            <GradientStop Color="#FE99FFFE" Offset="1"/>
                                            <GradientStop Color="#FEDEFFFE" Offset="0.043"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="MoreColors1" Value="#FEd2dae2"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" SourceName="ColorPickerBorder" Value="True"/>
                                    <Condition Property="Mode" Value="DropDown"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ColorPickerBorder" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type SfTools:ColorPickerPalette}}}"/>
                                <Setter Property="BorderBrush" TargetName="ColorPickerBorder" Value="#FF34E7E4"/>
                                <Setter Property="Background" TargetName="UpDownBorder" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type SfTools:ColorPickerPalette}}}"/>
                                <Setter Property="BorderBrush" TargetName="UpDownBorder" Value="#FF34E7E4"/>
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" SourceName="ColorBorder" Value="True"/>
                                    <Condition Property="Mode" Value="Split"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="ColorBorder" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type SfTools:ColorPickerPalette}}}"/>
                                <Setter Property="BorderBrush" TargetName="ColorBorder" Value="#FF34E7E4"/>
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                            </MultiTrigger>
                            <Trigger Property="IsMouseOver" SourceName="UpDownBorder" Value="True">
                                <Setter Property="Background" TargetName="UpDownBorder" Value="{Binding MouseOverBackground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type SfTools:ColorPickerPalette}}}"/>
                                <Setter Property="BorderBrush" TargetName="UpDownBorder" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="ColorPickerBorder" Value="#FF34E7E4"/>
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                            </Trigger>
                            <Trigger Property="IsOpen" SourceName="pop" Value="True">
                                <Setter Property="BorderBrush" TargetName="ColorPickerBorder" Value="#FF00d8d6"/>
                                <Setter Property="Fill" TargetName="UpDownBorderArrow" Value="#f53b57"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ____________________________________________________________________________ -->
        <!-- ________ HIGHLIGHTER PICKER (used in Notebook Font highlight Picker) _______ -->
        <!-- ____________________________________________________________________________ -->

        <ControlTemplate x:Key="HighlighterComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="HighlighterRootTemplate" SnapsToDevicePixels="true" Width="{TemplateBinding ActualWidth}" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_HighlighterPopup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=HighlighterRootTemplate}">
                        <Border x:Name="HighlighterdropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="HighlighterDropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="HighlighterOpaqueRect" Fill="{Binding Background, ElementName=HighlighterdropDownBorder}" Height="{Binding ActualHeight, ElementName=HighlighterdropDownBorder}" Width="{Binding ActualWidth, ElementName=HighlighterdropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="HighlighterPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="HighlighterToggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Foreground="White" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" MinWidth="27">
                    <ToggleButton.Template>
                        <ControlTemplate>
                            <Grid x:Name="HighlighterToggleButtonGrid" Width="{Binding ActualWidth, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="Highlighter_ComboBoxToggleButton" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="Transparent" SnapsToDevicePixels="true" CornerRadius="3">
                                    <Border x:Name="HighlighterSplitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="10" d:LayoutOverrides="HorizontalAlignment">
                                        <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="#FF606060" HorizontalAlignment="Right" Margin="0,2,2,0" VerticalAlignment="Center"/>
                                    </Border>
                                </Border>
                                <Image x:Name="HighlighterImage"  Source="pack://application:,,,/Icons/Icon awesome-highlighter.png" Width="14" Margin="1,0,10,0"></Image>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Highlighter_ComboBoxToggleButton" Value="Transparent"/>
                                    <Setter Property="BorderBrush" TargetName="Highlighter_ComboBoxToggleButton" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                    <Setter Property="Background" TargetName="HighlighterSplitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="HighlighterSplitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver" SourceName="Highlighter_ComboBoxToggleButton" Value="true">
                                    <Setter Property="Fill" TargetName="arrow" Value="#f53b57"/>
                                    <Setter Property="BorderBrush" TargetName="Highlighter_ComboBoxToggleButton" Value="#FF34E7E4"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" SourceName="HighlighterToggleButtonGrid" Value="true">
                                    <Setter Property="Fill" TargetName="arrow" Value="#f53b57"/>
                                    <Setter Property="BorderBrush" TargetName="Highlighter_ComboBoxToggleButton" Value="#FF34E7E4"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" SourceName="HighlighterSplitBorder" Value="true">
                                    <Setter Property="Fill" TargetName="arrow" Value="#f53b57"/>
                                    <Setter Property="BorderBrush" TargetName="Highlighter_ComboBoxToggleButton" Value="#FF34E7E4"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" SourceName="HighlighterImage" Value="true">
                                    <Setter Property="Fill" TargetName="arrow" Value="#f53b57"/>
                                    <Setter Property="BorderBrush" TargetName="Highlighter_ComboBoxToggleButton" Value="#FF34E7E4"/>
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="arrow" Value="#f53b57"/>
                                    <Setter Property="BorderBrush" TargetName="Highlighter_ComboBoxToggleButton" Value="#FF34E7E4"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" SourceName="Highlighter_ComboBoxToggleButton"  Value="false">
                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                                </Trigger>

                                <Trigger Property="IsMouseOver"  SourceName="Highlighter_ComboBoxToggleButton"  Value="false">
                                    <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Static.Glyph}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_HighlighterPopup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="HighlighterComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource HighlighterComboBoxTemplate}"/>
            <Setter Property="Text" Value=""/>
        </Style>


    </Window.Resources>


    <Grid x:Name="HomeGrid"  Margin="0,0,0,0">
        <Grid.Background>
            <LinearGradientBrush EndPoint="448,421" StartPoint="448,0" MappingMode="Absolute">
                <GradientStop Color="#FF000474" Offset="1"/>
                <GradientStop Color="#FF808E9B"/>
                <GradientStop Color="#FF46488B"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="23" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <WrapPanel x:Name="MainMenuPanel" Grid.ColumnSpan="2" DockPanel.Dock="Top" d:LayoutOverrides="LeftMargin, RightMargin" Background="#FF00086C" Margin="0,0,0,4">
            <Menu Width="{Binding ActualWidth, ElementName=MainMenuPanel, Mode=OneWay}" Height="15" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,3,0,0" VerticalContentAlignment="Top">
                <Menu.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF3C40C6" Offset="0.005"/>
                        <GradientStop Color="#FF00086C" Offset="0.977"/>
                        <GradientStop Color="#FF030A70" Offset="0.643"/>
                        <GradientStop Color="#FF1D2398" Offset="0.01"/>
                    </LinearGradientBrush>
                </Menu.Background>
                <MenuItem Header="File" Height="15" Background="{x:Null}" Padding="2,0" BorderBrush="{x:Null}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Lucida Sans" FontSize="10">

                    <MenuItem x:Name="MenuItemOpenFile" Header="Open"  Margin="0,0,0,0" ItemContainerStyle="{DynamicResource MenuItemStyle1}" ToolTip="Open File" Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">
                        <MenuItem.Resources>
                            <Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                                <Style.Triggers>
                                    <Trigger Property="Role" Value="SubmenuItem">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                                        <Setter Property="Padding" Value="2,0"/>
                                    </Trigger>
                                    <Trigger Property="Role" Value="TopLevelItem">
                                        <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                                        <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                                        <Setter Property="Padding" Value="2,0"/>
                                    </Trigger>
                                    <Trigger Property="Role" Value="SubmenuHeader">
                                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Resources>
                        <MenuItem.Background>
                            <SolidColorBrush Color="#FFDDDDDD" Opacity="0"/>
                        </MenuItem.Background>
                        <MenuItem.BorderBrush>
                            <SolidColorBrush Color="White" Opacity="0"/>
                        </MenuItem.BorderBrush>
                        <MenuItem x:Name="OpenFilePDF" Header="          Open PDF" Click="OpenPDFFile_Click" ToolTip="Open PDF File" Margin="0,0,-1.333,0"/>
                        <MenuItem x:Name="OpenFileNotesSession" Header="          Open Notes" Click="OpenNotesFile_Click" ToolTip="Open notebook session (PDF w/notes)" Height="22" Margin="0,0,31.667,0" HorizontalAlignment="Right"/>
                    </MenuItem>
                    <MenuItem x:Name="MenuItemSaveFile" Header="Save" ItemContainerStyle="{DynamicResource MenuItemStyle1}" Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" >
                        <MenuItem.Resources>
                            <Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                                <Style.Triggers>
                                    <Trigger Property="Role" Value="SubmenuItem">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                                        <Setter Property="Padding" Value="2,0"/>
                                    </Trigger>
                                    <Trigger Property="Role" Value="TopLevelItem">
                                        <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
                                        <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                                        <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                                        <Setter Property="Padding" Value="2,0"/>
                                    </Trigger>
                                    <Trigger Property="Role" Value="SubmenuHeader">
                                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Resources>
                        <MenuItem.BorderBrush>
                            <SolidColorBrush Color="White" Opacity="0"/>
                        </MenuItem.BorderBrush>
                        <MenuItem x:Name="SaveFilePDF" Header="          Save PDF" Click="SavePDFFile_Click" ToolTip="Save PDF" Margin="0,0,28.333,0"/>
                        <MenuItem x:Name="SaveFileNotesSession" Header="          Save Notes"  Click="SaveNotesFile_Click" ToolTip="Save PDF and notes" Margin="0,0,31,0"/>
                    </MenuItem>
                    <MenuItem x:Name="MenuItemSaveAsFile" Header="Save As" Click="SaveAsFile_Click" ItemContainerStyle="{DynamicResource MainMenuItemStyle}" ToolTip="Save File As..." Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">

                    </MenuItem>
                    <MenuItem x:Name="MenuItemExit" Header="Exit" ToolTip="Exit Application" Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}">

                    </MenuItem>
                </MenuItem>
            </Menu>
        </WrapPanel>
        <PdfViewer:PdfViewerControl x:Name="PdfViewer" Grid.Row="1" Margin="6,0,8,5" Style="{DynamicResource PdfViewerControlStyl}" BorderBrush="White" BorderThickness="1" ZoomMode="FitWidth" TextSelectionCompleted="PdfViewer_TextSelectionCompleted" IsManipulationEnabled="True" Background="{DynamicResource ComboBox.Disabled.Editable.Button.Background}">
            <PdfViewer:PdfViewerControl.Resources>
                <Style x:Key="PdfViewerControlStyl" TargetType="{x:Type PdfViewer:PdfViewerControl}">
                    <Setter Property="TextSelectionBrushColor" Value="#FF34E7E4"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type PdfViewer:PdfViewerControl}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4">
                                    <StackPanel x:Name="container" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                                        <PdfViewer:DocumentToolbar x:Name="PART_Toolbar" ActiveView="{x:Null}" Height="70" Width="Auto" Style="{DynamicResource DocumentViewToolbar}">
                                            <PdfViewer:DocumentToolbar.Resources>
                                                <Style x:Key="DocumentViewToolbar" TargetType="{x:Type PdfViewer:DocumentToolbar}">
                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type PdfViewer:DocumentToolbar}">
                                                                <Border BorderThickness="0" CornerRadius="4" Margin="-2,0">
                                                                    <Border.BorderBrush>
                                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                            <GradientStop Color="#FF999898" Offset="1"/>
                                                                            <GradientStop Color="White"/>
                                                                        </LinearGradientBrush>
                                                                    </Border.BorderBrush>
                                                                    <Border.Background>
                                                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                                                            <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" Offset="0.179"/>
                                                                            <GradientStop Color="#FFA2A2A2" Offset="0.838"/>
                                                                            <GradientStop Color="#FFF3F3F3" Offset="0.111"/>
                                                                        </LinearGradientBrush>
                                                                    </Border.Background>
                                                                    <TabControl Margin="0,0,0,0" BorderThickness="0">
                                                                        <TabItem x:Name="PART_DocPDFtoolbar" Header="Home" FontSize="12" FontFamily="Lucida Sans" Margin="3,-2,0,0">
                                                                            <Border Background="White" BorderThickness="1" CornerRadius="3" Padding="1" Margin="0,-2,0,0" BorderBrush="#FFACACAC" Height="Auto">
                                                                                <WrapPanel x:Name="toolBar" VerticalAlignment="Stretch" ItemHeight="Auto" Orientation="Horizontal" Margin="2,4,0,6" >
                                                                                <Button x:Name="PopupComment" Width="23" Margin="5,0,0,0" Click="PopupComment_Click" CommandParameter="Highlight" Command="{Binding AnnotationCommand, ElementName=PdfViewer, Mode=OneWay}" ClickMode="Press" DataContext="{Binding TemplatedParent.AnnotationMode, RelativeSource={RelativeSource TemplatedParent}}" Background="{x:Null}" IsEnabled="False">
                                                                                    <Button.Style>
                                                                                        <Style TargetType="{x:Type Button}">
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                                                        <Grid>
                                                                                                            <Border x:Name="Background" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                <Grid Background="{TemplateBinding Background}" Margin="0">
                                                                                                                    <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                </Grid>
                                                                                                            </Border>
                                                                                                            <ContentPresenter x:Name="contentPresenter"/>
                                                                                                        </Grid>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter Property="Content" Value="{StaticResource PopupCommentIconDisabled}"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsEnabled" Value="True">
                                                                                                                <Setter Property="Content" Value="{StaticResource PopupCommentIcon}"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>

                                                                                        </Style>
                                                                                    </Button.Style>
                                                                                </Button>
                                                                                <ToggleButton x:Name="PART_StickyNote" FlowDirection="LeftToRight" Height="24" Margin="5,0,0,0" Padding="0,0" Width="24" ClickMode="Press">
                                                                                    <ToggleButton.Style>
                                                                                        <Style TargetType="{x:Type ToggleButton}">
                                                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                        <Grid>
                                                                                                            <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                    <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                </Grid>
                                                                                                            </Border>
                                                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                            <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                        </Grid>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsEnabled" Value="True">
                                                                                                                <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                                <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                                                <Setter Property="Background" Value="Gray"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                                                <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </ToggleButton.Style>
                                                                                    <Grid Height="18.373" Width="18.98">
                                                                                        <Path Data="M4,6.999999L4,7.9999986 9,7.9999986 9,6.999999z M4,3.9999995L4,4.9999995 12,4.9999995 12,3.9999995z M0.5,0L15.5,0C15.776001,0,16,0.22399899,16,0.5L16,11.499999C16,11.776,15.776001,11.999999,15.5,11.999999L6.6849976,11.999999 2.8249969,15.292998C2.7330017,15.372 2.6169968,15.413001 2.5,15.413001 2.4300003,15.413001 2.3580017,15.398001 2.2910004,15.366995 2.1139984,15.286002 2,15.108 2,14.913001L2,11.999999 0.5,11.999999C0.22399902,11.999999,0,11.776,0,11.499999L0,0.5C0,0.22399899,0.22399902,0,0.5,0z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Margin="0.224,0,0,0" Stretch="Fill"/>
                                                                                    </Grid>
                                                                                </ToggleButton>
                                                                                <ToggleButton x:Name="PART_Ink" Height="24" Margin="5,0,0,0" Padding="0" Width="40">
                                                                                    <ToggleButton.Style>
                                                                                        <Style TargetType="{x:Type ToggleButton}">
                                                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                                            <Setter Property="Template">
                                                                                                <Setter.Value>
                                                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                        <Grid>
                                                                                                            <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                    <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                </Grid>
                                                                                                            </Border>
                                                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                            <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                        </Grid>
                                                                                                        <ControlTemplate.Triggers>
                                                                                                            <Trigger Property="IsEnabled" Value="True">
                                                                                                                <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                                                <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                                                <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                                                <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                                                <Setter Property="Background" Value="Gray"/>
                                                                                                            </Trigger>
                                                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                                                <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                            </Trigger>
                                                                                                        </ControlTemplate.Triggers>
                                                                                                    </ControlTemplate>
                                                                                                </Setter.Value>
                                                                                            </Setter>
                                                                                        </Style>
                                                                                    </ToggleButton.Style>
                                                                                    <Grid Height="18" Canvas.Left="38" Width="38.101">
                                                                                        <Grid.ColumnDefinitions>
                                                                                            <ColumnDefinition Width="*"/>
                                                                                            <ColumnDefinition Width="20"/>
                                                                                        </Grid.ColumnDefinitions>
                                                                                        <Path Grid.Column="0" Data="M12.149,1.516L1.175,12.616 5.3710001,16.678001 16.345,5.5780001z M6.6613383E-16,18L4.1219998,18 6.6613383E-16,13.887z M17.104314,1.9160911L15.82821,0.6811354C15.023144,-0.098836592,13.87305,-0.22783196,13.259,0.39214578L17.450343,4.451C18.064393,3.8310223,17.90938,2.696063,17.104314,1.9160911 M7.3469999,16.66L5.882,18 17.999999,18 17.999999,16.686z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" FlowDirection="LeftToRight" Stretch="Uniform" Width="30"/>
                                                                                        <Path x:Name="Dropdown" Grid.Column="1" Data="M18.999996,7.0000275L25.999996,7.0000275 22.499996,11.000027z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Height="4" Stretch="Uniform" Width="7"/>
                                                                                    </Grid>
                                                                                </ToggleButton>
                                                                                <Rectangle x:Name="PART_ToolsSeparator_1" Fill="#FF797979" HorizontalAlignment="Center" Height="17" Margin="1,0,0,0" VerticalAlignment="Center" Width="1.6"/>
                                                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,0" Height="24">
                                                                                    <ToggleButton x:Name="PART_Highlight" Height="24" Margin="5,0,0,0" Padding="0" Width="40">
                                                                                        <ToggleButton.Style>
                                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="Gray"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                    <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ToggleButton.Style>
                                                                                        <Grid Height="18" Canvas.Left="38" Width="39.101">
                                                                                            <Grid.ColumnDefinitions>
                                                                                                <ColumnDefinition Width="*"/>
                                                                                                <ColumnDefinition Width="20"/>
                                                                                            </Grid.ColumnDefinitions>
                                                                                            <Path x:Name="PART_HighlightPath" Data="M3,0L12,0 12,1.9999999 0,1.9999999z" Fill="#FFFFDE17" FlowDirection="LeftToRight" Height="2" Margin="2,0,0,0" Stretch="Fill" VerticalAlignment="Bottom"/>
                                                                                            <Path x:Name="Highlight" Grid.Column="0" Data="M3.3249993,11.215L3.0929994,13.576 3.0629994,13.883 1.8639996,15.09 1.4889997,15.467 0,16.994 2.6959994,16.917 4.4599991,15.147 6.8369986,15.065 7.1639985,15.054 5.6829988,13.573z M17.493998,1.037L17.188998,0.732C16.212999,-0.244,14.630999,-0.244,13.654999,0.732L4.2090004,10.177 7.6029999,13.571 8.0479998,14.016 8.4949997,13.57 17.493998,4.571C18.469998,3.595,18.469998,2.013,17.493998,1.037" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" FlowDirection="LeftToRight" Stretch="Uniform" Width="30"/>
                                                                                            <Path Grid.Column="1" Data="M18.999996,7.0000275L25.999996,7.0000275 22.499996,11.000027z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Height="4" Stretch="Uniform" Width="7"/>
                                                                                        </Grid>
                                                                                    </ToggleButton>
                                                                                    <ToggleButton x:Name="PART_Underline" Height="24" Margin="0,0,0,0" Padding="0" Width="40">
                                                                                        <ToggleButton.Style>
                                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="Gray"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                    <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ToggleButton.Style>
                                                                                        <Grid Height="18" Canvas.Left="74.879" Width="28.101">
                                                                                            <Path x:Name="PART_UnderlinePath" Data="F1M88.096,17.5L75.057,17.5 75.057,15.87 88.096,15.87z" Fill="#FF0A8140" HorizontalAlignment="Left" Height="1.63" Margin="0.178,0,0,0" Stretch="Fill" VerticalAlignment="Bottom" Width="13.039"/>
                                                                                            <Path Data="M19.101001,7L23.601001,11.224 28.101001,7z M7.8970017,1.453L7.8970017,12.236 7.8970017,13.425C7.8970017,13.753 7.9410017,14.025 8.0290017,14.241 8.1160017,14.457 8.2690017,14.617 8.4850018,14.721 8.7010018,14.825 9.0330019,14.877 9.481002,14.877L10.345002,14.877C10.345002,14.909 10.337002,14.965 10.321002,15.045 10.305002,15.125 10.297002,15.181 10.297002,15.213 10.297002,15.245 10.305002,15.297 10.321002,15.369 10.337002,15.441 10.345002,15.691 10.345002,15.723 9.609002,15.707 8.9330019,15.691 8.3170017,15.675 7.7010016,15.659 7.1610015,15.651 6.6970014,15.651 6.2330013,15.651 5.6930012,15.659 5.0770011,15.675 4.4600009,15.691 3.7840008,15.707 3.0490006,15.723 3.0490006,15.691 3.0560006,15.441 3.0730006,15.369 3.0880006,15.297 3.0970006,15.245 3.0970006,15.213 3.0970006,15.181 3.0880006,15.125 3.0730006,15.045 3.0560006,14.965 3.0490006,14.909 3.0490006,14.877L3.9130008,14.877C4.3600009,14.877 4.693001,14.825 4.908001,14.721 5.1250011,14.617 5.2770011,14.457 5.3650011,14.241 5.4520011,14.025 5.4970012,13.753 5.4970012,13.425L5.4970012,12.236 5.4970012,1.453 3.8650008,1.453C3.1920007,1.453 2.6650006,1.505 2.2800005,1.609 1.8960004,1.713 1.5920003,1.873 1.3680003,2.089 1.1440002,2.305 0.9760002,2.589 0.86400018,2.941 0.75200016,3.294 0.64000013,3.709 0.52800011,4.189 0.35200007,4.141 0.17600004,4.141 -2.9116758E-22,4.189L0.22800005,8.2718061E-25C1.4440003,0.032 2.5930005,0.059 3.6730008,0.082999999 4.753001,0.107 5.7640012,0.119 6.7090014,0.119 7.6530016,0.119 8.6610018,0.107 9.733002,0.082999999 10.805002,0.059 11.949003,0.032 13.166003,8.2718061E-25L13.394003,4.189C13.361003,4.189 13.318003,4.182 13.262003,4.165 13.205003,4.15 13.161003,4.141 13.129003,4.141 13.097003,4.141 13.053003,4.15 12.997003,4.165 12.941003,4.182 12.897003,4.189 12.866003,4.189 12.753003,3.709 12.641003,3.297 12.530003,2.953 12.417003,2.609 12.249003,2.326 12.026003,2.101 11.801002,1.877 11.497002,1.713 11.113002,1.609 10.730002,1.505 10.201002,1.453 9.529002,1.453z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Margin="0,0,0,2.277" Stretch="Fill"/>
                                                                                        </Grid>
                                                                                    </ToggleButton>
                                                                                    <ToggleButton x:Name="PART_Strikethrough" Height="24" Margin="0,0,0,0" Padding="0" Width="40">
                                                                                        <ToggleButton.Style>
                                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="Gray"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                    <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ToggleButton.Style>
                                                                                        <Grid Height="16.373" Canvas.Left="109" Width="27.98">
                                                                                            <Path Data="M18.755995,7L23.255995,11.224 27.755995,7z M7.6449983,1.547L7.6449983,12.887 7.6449983,14.038C7.6449983,14.356 7.6869983,14.619 7.7729983,14.828 7.8569983,15.037 8.0049982,15.192 8.2139982,15.293 8.4229981,15.393 8.7449981,15.443 9.178998,15.443L10.014998,15.443C10.014998,15.475 10.006998,15.529 9.9919978,15.606 9.9759978,15.684 9.9689978,16.04 9.9689978,16.071 9.9689978,16.103 9.9759978,16.153 9.9919978,16.222 10.006998,16.292 10.014998,16.342 10.014998,16.373 9.3029979,16.358 8.6479981,16.342 8.0509982,16.327 7.4549984,16.312 6.9319985,16.304 6.4829986,16.304 6.0339987,16.304 5.5109988,16.312 4.9149989,16.327 4.317999,16.342 3.6629992,16.358 2.9509993,16.373 2.9509993,16.342 2.9579993,16.292 2.9739993,16.222 2.9889993,16.153 2.9969993,16.103 2.9969993,16.071 2.9969993,16.04 2.9889993,15.684 2.9739993,15.606 2.9579993,15.529 2.9509993,15.475 2.9509993,15.443L3.7879992,15.443C4.2209991,15.443 4.542999,15.393 4.7519989,15.293 4.9609989,15.192 5.1079989,15.037 5.1939989,14.828 5.2779988,14.619 5.3209988,14.356 5.3209988,14.038L5.3209988,12.887 5.3209988,1.547 3.7409992,1.547C3.0899993,1.547 2.5789994,1.598 2.2069995,1.698 1.8349996,1.799 1.5409997,1.953 1.3239997,2.163 1.1069998,2.372 0.94399979,2.647 0.83599982,2.988 0.72699984,3.3290001 0.61899986,3.7310001 0.51099989,4.1960001 0.33999992,4.1500001 0.16999996,4.1500001 -2.8421709E-14,4.1960001L0.21999995,-2.4815418E-24C1.3969997,0.031000001 2.5089994,0.057000001 3.5549992,0.081000001 4.600999,0.104 5.5799988,0.116 6.4949986,0.116 7.4089984,0.116 8.3849981,0.104 9.4229979,0.081000001 10.460998,0.057000001 11.567997,0.031000001 12.745997,-2.4815418E-24L12.966997,4.1960001C12.934997,4.1960001 12.892997,4.1890001 12.838997,4.1730001 12.783997,4.1580001 12.741997,4.1500001 12.710997,4.1500001 12.679997,4.1500001 12.636997,4.1580001 12.582997,4.1730001 12.528997,4.1890001 12.485997,4.1960001 12.455997,4.1960001 12.346997,3.7310001 12.237997,3.3330001 12.129997,2.999 12.020997,2.666 11.858997,2.392 11.641997,2.175 11.424997,1.958 11.130998,1.799 10.758998,1.698 10.386998,1.598 9.8759978,1.547 9.224998,1.547z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Margin="0.224,0,0,0" Stretch="Fill"/>
                                                                                            <Path x:Name="PART_StrikethroughPath" Data="F1M122,8.5L109,8.5 109,6.5 122,6.5z" Fill="#FFED1E25" HorizontalAlignment="Left" Margin="0,7,0,7.373" Stretch="Fill" Width="13"/>
                                                                                        </Grid>
                                                                                    </ToggleButton>
                                                                                    <ToggleButton x:Name="PART_Shapes" BorderThickness="0" Height="24" Margin="0,0,0,0" Padding="0" Width="40">
                                                                                        <ToggleButton.ContextMenu>
                                                                                            <ContextMenu>
                                                                                                <MenuItem x:Name="PART_LineMenuItem">
                                                                                                    <MenuItem.Icon>
                                                                                                        <Path Data="M13.291,0L13.998001,0.70699883 0.70700071,14.000999 0,13.293999z" Fill="#FF485F77" Height="15.873" Canvas.Left="30.975" Stretch="Fill" Canvas.Top="95.474" Width="16"/>
                                                                                                    </MenuItem.Icon>
                                                                                                </MenuItem>
                                                                                                <MenuItem x:Name="PART_RectangleMenuItem">
                                                                                                    <MenuItem.Icon>
                                                                                                        <Path Data="M1,1L1,11 15,11 15,1z M0,0L16,0 16,12 0,12z" Fill="#FF485F77" Height="11" Canvas.Left="56.313" Stretch="Fill" Canvas.Top="96.479" Width="16"/>
                                                                                                    </MenuItem.Icon>
                                                                                                </MenuItem>
                                                                                                <MenuItem x:Name="PART_CircleMenuItem">
                                                                                                    <MenuItem.Icon>
                                                                                                        <Path Data="M8,1C4.1399994,1 1,4.1399994 1,8 1,11.860001 4.1399994,15 8,15 11.860001,15 15,11.860001 15,8 15,4.1399994 11.860001,1 8,1z M8,0C12.410995,0 16,3.5890007 16,8 16,12.411003 12.410995,16 8,16 3.5890045,16 0,12.411003 0,8 0,3.5890007 3.5890045,0 8,0z" Fill="#FF485F77" Height="16" Canvas.Left="80.375" Stretch="Fill" Canvas.Top="92.854" Width="16"/>
                                                                                                    </MenuItem.Icon>
                                                                                                </MenuItem>
                                                                                                <MenuItem x:Name="PART_ArrowMenuItem">
                                                                                                    <MenuItem.Icon>
                                                                                                        <Path Data="M6.4240081,0L13.998008,0 13.998008,7.5759999 12.998008,7.5759999 12.998008,1.7099974 0.70700026,14.001005 0,13.294005 12.294005,0.99999934 6.4240081,0.99999934z" Fill="#FF485F77" Height="15.873" Canvas.Left="30.975" Stretch="Fill" Canvas.Top="95.474" Width="16"/>
                                                                                                    </MenuItem.Icon>
                                                                                                </MenuItem>
                                                                                                <MenuItem x:Name="PART_PolygonMenuItem">
                                                                                                    <MenuItem.Icon>
                                                                                                        <Path Data="M4.5769973,0.99999984L1.1510013,6.9999999 4.5769973,13 11.420002,13 14.845998,6.9999999 11.420002,0.99999984z M3.9969954,0L12.000004,0 15.996999,6.9999999 12.000004,14 3.9969954,14 0,6.9999999z" Fill="#FF485F77" Height="16" Canvas.Left="80.375" Stretch="Fill" Canvas.Top="92.854" Width="16"/>
                                                                                                    </MenuItem.Icon>
                                                                                                </MenuItem>
                                                                                                <MenuItem x:Name="PART_PolylineMenuItem">
                                                                                                    <MenuItem.Icon>
                                                                                                        <Path Data="M4.0139825,0L12.058961,0 15.933951,6.8439993C16.069954,7.0849985 15.985953,7.3899988 15.744957,7.5259985 15.505959,7.6609987 15.198968,7.5769991 15.063959,7.3369993L11.47597,0.99999992 4.5969889,0.99999992 1.1489991,7.0899996 4.495991,13.002998 9.971976,9.9490008C10.212972,9.8159975 10.517979,9.9010004 10.652974,10.141998 10.786977,10.382999 10.700978,10.687999 10.459965,10.821998L4.1149952,14.36 0,7.0899996z" Fill="#FF485F77" Height="16" Canvas.Left="80.375" Stretch="Fill" Canvas.Top="92.854" Width="16"/>
                                                                                                    </MenuItem.Icon>
                                                                                                </MenuItem>
                                                                                            </ContextMenu>
                                                                                        </ToggleButton.ContextMenu>
                                                                                        <ToggleButton.Style>
                                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="Gray"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                    <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ToggleButton.Style>
                                                                                        <Grid Height="25" Canvas.Left="38" Width="38.101">
                                                                                            <Grid.ColumnDefinitions>
                                                                                                <ColumnDefinition Width="*"/>
                                                                                                <ColumnDefinition Width="20"/>
                                                                                            </Grid.ColumnDefinitions>
                                                                                            <Path Grid.Column="0" Data="M12.176994,8.7580003C12.283994,8.7580003,12.388994,8.7730003,12.492994,8.7870003L12.640994,8.8060003C13.020994,8.8490003 13.352994,8.9270003 13.655993,9.0440003 15.268993,9.6660004 16.311992,11.177 16.311992,12.893 16.311992,15.173001 14.456993,17.028001 12.176994,17.028001 10.350995,17.028001 8.7669958,15.842001 8.234996,14.076001 8.1299961,13.729 8.0729961,13.397 8.0589961,13.061 8.0569961,13.026 8.0519961,12.99 8.0469961,12.956 8.0439961,12.936 8.0399961,12.914 8.0399961,12.893 8.0399961,10.613 9.8959952,8.7580003 12.176994,8.7580003 M12.176994,7.1820003C9.0509956,7.1820003,6.5029968,9.7060004,6.4649969,12.822L4.9409976,12.822 4.9409976,8.3340003 7.9309962,5.3440002 12.418994,5.3440002 12.418994,7.1990003C12.338994,7.1900003,12.258994,7.1820003,12.176994,7.1820003 M13.994993,7.5070003L13.994993,3.7680002 9.5059954,3.7680002 12.159994,1.1140001 11.045995,7.3719033E-08 -1.0587912E-22,11.045 1.1139995,12.159 3.3639984,9.9090004 3.3639984,14.399001 6.6799968,14.399001C7.3599964,16.884001 9.5929954,18.604001 12.176994,18.604001 15.324993,18.604001 17.886991,16.042001 17.886991,12.893 17.886991,10.436 16.330992,8.2940003 13.994993,7.5070003" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" FlowDirection="LeftToRight" Height="18.604" Canvas.Left="139.646" Stretch="Uniform" Width="31.334"/>
                                                                                            <Path Grid.Column="1" Data="M18.999996,7.0000275L25.999996,7.0000275 22.499996,11.000027z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Height="4" Stretch="Uniform" Width="7"/>
                                                                                        </Grid>
                                                                                    </ToggleButton>
                                                                                    <ToggleButton x:Name="PART_Fill" Height="24" Margin="0,0,0,0" Padding="0" ToolTipService.ShowOnDisabled="True" Width="32">
                                                                                        <ToggleButton.Style>
                                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="Gray"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                    <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ToggleButton.Style>
                                                                                        <Grid Height="18" Canvas.Left="38" Width="22">
                                                                                            <Path x:Name="PART_FillPath" Fill="#FFFFDE17" Height="2.99" Margin="0,0,11.896,0" Stretch="Fill" VerticalAlignment="Bottom"/>
                                                                                            <Path Data="M28.350082,17.922999C28.350082,17.922999 36.564648,26.171244 28.350082,30.09836 28.350082,30.09836 26.388948,30.627375 25.245869,28.534313 24.282803,26.77326 24.723833,24.576197 26.147932,23.150154 27.140999,22.154123 28.223074,20.494076 28.350082,17.922999z M13.696607,0.00018225641C14.286243,0.005385525 14.874612,0.12182412 15.425857,0.32882591 17.517838,1.1128335 21.221804,4.4358645 21.272802,11.527931L22.810787,13.073946 26.461754,16.786982C26.876749,17.209984,26.876749,17.893992,26.461754,18.315996L13.312876,31.688122C12.89788,32.110127,12.223887,32.111126,11.80889,31.688122L0.31199693,19.999012C-0.10399898,19.577007,-0.10399898,18.891001,0.31199693,18.469996L13.461875,5.096871C13.876871,4.6738668,14.549865,4.6738668,14.965861,5.096871L15.01886,5.1498714C16.220848,6.371883 16.945843,7.9948984 17.04084,9.7219144 17.073841,10.32492 17.079842,10.980927 17.058842,11.689933 16.452847,12.070937 16.044851,12.746943 16.044851,13.52495 16.044851,14.719962 16.997843,15.68797 18.172831,15.68797 19.149822,15.68797 19.964813,15.014965 20.213812,14.101956 20.264813,13.916954 20.29981,13.725952 20.29981,13.52495 20.29981,13.318949 20.270813,13.119947 20.216812,12.932944 20.196812,12.862944 20.158812,12.803944 20.132813,12.737943 20.087812,12.623941 20.048815,12.507941 19.985815,12.40594 19.941814,12.332939 19.881817,12.273939 19.829817,12.207938 19.765816,12.124937 19.705816,12.036936 19.630817,11.964935 19.567818,11.904935 19.492819,11.861934 19.423821,11.808934 19.332819,11.741933 19.246822,11.664932 19.146822,11.611932 19.123821,5.4278742 15.985851,2.84385 14.689864,2.3578451 14.258867,2.1958438 13.783872,2.117843 13.326876,2.1838435 9.6879092,2.7138484 9.1249152,6.5428849 9.1219149,6.5968853 9.0959149,7.1938906 8.6059199,7.6608949 8.0119257,7.6288949 7.4249311,7.6018945 6.9709354,7.09689 6.9969349,6.4988843 7.107934,3.9888607 8.6879187,0.56782831 13.107878,0.032823523 13.303376,0.0090730604 13.500062,-0.0015520401 13.696607,0.00018225641" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Margin="0.98,0,0,1.006" Stretch="Fill"/>
                                                                                        </Grid>
                                                                                    </ToggleButton>
                                                                                </StackPanel>
                                                                                <StackPanel Orientation="Horizontal" Margin="0,0,0,0" Height="24">
                                                                                    <ToggleButton x:Name="PART_FreeText" Height="24" Margin="0,0,0,0" Padding="0" Width="32">
                                                                                        <ToggleButton.Style>
                                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="Gray"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                    <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ToggleButton.Style>
                                                                                        <Grid Height="16.373" Width="20.98">
                                                                                            <Path Data="M8.3139992,6L21.697001,6 21.824001,11 21.007001,11C20.733001,9.7530003 20.385001,8.941 19.963001,8.5639992 19.542001,8.1879997 18.654001,8 17.3,8L16.000001,8 16.000001,20.442 16.000001,22 18,22 18,24 12,24 12,22 14,22 14,19.681 14,8 12.699,8C11.406,8 10.526,8.1870003 10.059,8.559 9.5909996,8.9319992 9.2390003,9.7450008 9.0030003,11L8.1749992,11z M4,2L4,4 2,4 2,26 4,26 4,28 26,28 26,26 28,26 28,4 26,4 26,2z M0,0L4,0 4,1 26,1 26,0 30,0 30,4 29,4 29,26 30,26 30,30 26,30 26,29 4,29 4,30 0,30 0,26 1,26 1,4 0,4z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Margin="0.224,0,0,0" Stretch="Fill"/>
                                                                                        </Grid>
                                                                                    </ToggleButton>
                                                                                    <Button x:Name="PART_ButtonTextBoxFont" Height="24" IsEnabled="False" Margin="0,0,0,0" Padding="0" ToolTipService.ShowOnDisabled="True" Width="32">
                                                                                        <Button.Style>
                                                                                            <Style TargetType="{x:Type Button}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Button.Style>
                                                                                        <Path Data="M14.806001,6.6680055L13.007997,6.9160066C12.455003,6.9930024 12.037004,7.1300035 11.755998,7.327002 11.474,7.5230007 11.334001,7.8719997 11.334001,8.3710003 11.334001,8.7350063 11.463998,9.0330029 11.723001,9.2630062 11.983003,9.4930019 12.328004,9.6089993 12.761003,9.6089993 13.352998,9.6089993 13.842004,9.4010067 14.226998,8.9860058 14.613,8.5710049 14.806001,8.0460033 14.806001,7.4100022z M13.372003,2.8100043C15.124002,2.8100043,16.000001,3.7370061,16.000001,5.5900025L16.000001,10.439001 14.806001,10.439001 14.806001,9.2740002 14.777001,9.2740002C14.257997,10.167005 13.492997,10.613004 12.484002,10.613004 11.741998,10.613004 11.159997,10.417005 10.740998,10.023001 10.321,9.630003 10.111001,9.1089993 10.111001,8.4590054 10.111001,7.0660005 10.931001,6.2550035 12.571,6.0270066L14.806001,5.7140031C14.806001,4.4480045 14.294,3.8140019 13.269998,3.8140019 12.372003,3.8140019 11.561997,4.1200017 10.838998,4.7310016L10.838998,3.5090016C11.572,3.043006,12.416001,2.8100043,13.372003,2.8100043z M4.6010013,1.2670004C4.5530014,1.5620005,4.4960012,1.7950006,4.433001,1.9650007L2.8100009,6.4130025 6.4280016,6.4130025 4.7900014,1.9650007C4.7370014,1.8200006,4.683001,1.5870005,4.6300011,1.2670004z M4.0040011,0L5.2700014,0 9.2890022,10.438004 7.9350021,10.438004 6.8280017,7.5120029 2.4030008,7.5120029 1.3620005,10.438004 0,10.438004z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" FlowDirection="LeftToRight" HorizontalAlignment="Left" Height="15.81" Stretch="Fill" VerticalAlignment="Top" Width="22"/>
                                                                                    </Button>
                                                                                </StackPanel>
                                                                            </WrapPanel>
                                                                       </Border>
                                                                        </TabItem>
                                                                        <TabItem x:Name="PART_DocPDFtoolbarView" Header="View" FontFamily="Lucida Sans" FontSize="10" Margin="0,-2,0,0">
                                                                            <Border Background="White" BorderThickness="1" CornerRadius="3" Padding="1" Margin="0,-2,0,0" BorderBrush="#FFACACAC" Height="Auto">
                                                                                <WrapPanel Margin="0,4,0,0">
                                                                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0" Height="24">
                                                                                        <ComboBox x:Name="PART_ComboBoxCurrentZoomLevel" Height="21" IsEditable="True" Margin="10,0,0,0" Text="100%" VerticalAlignment="Center" Width="60">
                                                                                            <ComboBox.Style>
                                                                                                <Style TargetType="{x:Type ComboBox}">
                                                                                                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                                                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                                                                                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                                                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type ComboBox}">
                                                                                                                <Grid>
                                                                                                                    <ToggleButton x:Name="ToggleButton" ClickMode="Press" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                                                                                        <ToggleButton.Template>
                                                                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                                                <Grid>
                                                                                                                                    <Grid.ColumnDefinitions>
                                                                                                                                        <ColumnDefinition/>
                                                                                                                                        <ColumnDefinition Width="20"/>
                                                                                                                                    </Grid.ColumnDefinitions>
                                                                                                                                    <Border x:Name="Border" BorderBrush="#FF888888" BorderThickness="1" Background="#FFDDDDDD" Grid.ColumnSpan="2"/>
                                                                                                                                    <Border BorderBrush="#FF888888" BorderThickness="0,0,1,0" Background="White" Grid.Column="0" Margin="1"/>
                                                                                                                                    <Path x:Name="Arrow" Grid.Column="1" Data="M0,0L4,4 8,0z" Fill="#FF475F77" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                                                                                </Grid>
                                                                                                                                <ControlTemplate.Triggers>
                                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                                        <Setter Property="Background" TargetName="Border" Value="#CCFFFFFF"/>
                                                                                                                                    </Trigger>
                                                                                                                                    <Trigger Property="IsChecked" Value="True">
                                                                                                                                        <Setter Property="Background" TargetName="Border" Value="#8CFFFFFF"/>
                                                                                                                                    </Trigger>
                                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                                        <Setter Property="Background" TargetName="Border" Value="#FFEEEEEE"/>
                                                                                                                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FFAAAAAA"/>
                                                                                                                                        <Setter Property="Foreground" Value="#FF888888"/>
                                                                                                                                        <Setter Property="Fill" TargetName="Arrow" Value="#FF888888"/>
                                                                                                                                    </Trigger>
                                                                                                                                </ControlTemplate.Triggers>
                                                                                                                            </ControlTemplate>
                                                                                                                        </ToggleButton.Template>
                                                                                                                    </ToggleButton>
                                                                                                                    <ContentPresenter x:Name="ContentSite" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" HorizontalAlignment="Left" IsHitTestVisible="False" Margin="3,3,23,3" VerticalAlignment="Center"/>
                                                                                                                    <TextBox x:Name="PART_EditableTextBox" Background="Transparent" Foreground="Black" Focusable="True" HorizontalAlignment="Left" IsReadOnly="{TemplateBinding IsReadOnly}" Margin="3,3,23,3" Style="{x:Null}" Visibility="Hidden" VerticalAlignment="Center">
                                                                                                                        <TextBox.Template>
                                                                                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                                                                <Border x:Name="PART_ContentHost" Background="{TemplateBinding Background}" Focusable="False"/>
                                                                                                                            </ControlTemplate>
                                                                                                                        </TextBox.Template>
                                                                                                                    </TextBox>
                                                                                                                    <Popup x:Name="Popup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="Slide" Placement="Bottom">
                                                                                                                        <Grid x:Name="DropDown" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True">
                                                                                                                            <Border x:Name="DropDownBorder" BorderBrush="#FF888888" BorderThickness="1" Background="White"/>
                                                                                                                            <ScrollViewer Margin="4,6" SnapsToDevicePixels="True">
                                                                                                                                <StackPanel KeyboardNavigation.DirectionalNavigation="Contained" IsItemsHost="True"/>
                                                                                                                            </ScrollViewer>
                                                                                                                        </Grid>
                                                                                                                    </Popup>
                                                                                                                </Grid>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="HasItems" Value="False">
                                                                                                                        <Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                        <Setter Property="Opacity" Value="1"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                        <Setter Property="Opacity" Value="0.1999"/>
                                                                                                                        <Setter Property="Foreground" Value="#FF888888"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsGrouping" Value="True">
                                                                                                                        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="AllowsTransparency" SourceName="Popup" Value="True">
                                                                                                                        <Setter Property="Margin" TargetName="DropDownBorder" Value="0,2,0,0"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEditable" Value="True">
                                                                                                                        <Setter Property="IsTabStop" Value="False"/>
                                                                                                                        <Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                                                                                                        <Setter Property="Visibility" TargetName="ContentSite" Value="Hidden"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </ComboBox.Style>
                                                                                            <ComboBoxItem Content="50%"/>
                                                                                            <ComboBoxItem Content="75%"/>
                                                                                            <ComboBoxItem Content="100%" IsSelected="True"/>
                                                                                            <ComboBoxItem Content="125%"/>
                                                                                            <ComboBoxItem Content="150%"/>
                                                                                            <ComboBoxItem Content="200%"/>
                                                                                            <ComboBoxItem Content="400%"/>
                                                                                        </ComboBox>
                                                                                        <Button x:Name="PART_ButtonZoomOut" Height="24" IsEnabled="True" Margin="2,0,0,0" ToolTipService.ShowOnDisabled="True" Width="24">
                                                                                            <Button.Style>
                                                                                                <Style TargetType="{x:Type Button}">
                                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                                                <Grid>
                                                                                                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                        <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                            <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                        </Grid>
                                                                                                                    </Border>
                                                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                    <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                                </Grid>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                        <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                        <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Button.Style>
                                                                                            <Path Data="F1M448.276,92.817L438.256,92.817 438.256,90.084 448.276,90.084z M443.266,82.423C438.303,82.423 434.266,86.461 434.266,91.423 434.266,96.386 438.303,100.423 443.266,100.423 448.228,100.423 452.266,96.386 452.266,91.423 452.266,86.461 448.228,82.423 443.266,82.423" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Height="18" Canvas.Left="285.797" Stretch="Fill" Canvas.Top="0.3" Width="18"/>
                                                                                        </Button>
                                                                                        <Button x:Name="PART_ButtonZoomIn" Height="24" IsEnabled="True" Margin="0,0,0,0" ToolTipService.ShowOnDisabled="True" Width="24">
                                                                                            <Button.Style>
                                                                                                <Style TargetType="{x:Type Button}">
                                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                                                <Grid>
                                                                                                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                        <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                            <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                        </Grid>
                                                                                                                    </Border>
                                                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                    <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                                </Grid>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                        <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                        <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Button.Style>
                                                                                            <Path Data="F1M419.2005,92.8167L415.5575,92.8167 415.5575,96.4597 412.8245,96.4597 412.8245,92.8167 409.1805,92.8167 409.1805,90.0837 412.8245,90.0837 412.8245,86.4407 415.5575,86.4407 415.5575,90.0837 419.2005,90.0837z M414.1905,82.4237C409.2275,82.4237 405.1905,86.4607 405.1905,91.4237 405.1905,96.3857 409.2275,100.4237 414.1905,100.4237 419.1525,100.4237 423.1905,96.3857 423.1905,91.4237 423.1905,86.4607 419.1525,82.4237 414.1905,82.4237" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Height="18" Canvas.Left="256.721" Stretch="Fill" Canvas.Top="0.301" Width="18"/>
                                                                                        </Button>
                                                                                        <Rectangle x:Name="PART_ZoomToolsSeparator_1" Fill="#FF797979" HorizontalAlignment="Center" Height="17" Margin="1,0,0,0" VerticalAlignment="Center" Width="1.6"/>
                                                                                    </StackPanel>
                                                                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0" Height="24">
                                                                                        <TextBox x:Name="PART_TextCurrentPageIndex" HorizontalContentAlignment="Center" Height="24" Margin="5,0,0,0" TextAlignment="Center" VerticalContentAlignment="Center" Width="20">
                                                                                            <TextBox.Style>
                                                                                                <Style TargetType="{x:Type TextBox}">
                                                                                                    <Setter Property="Foreground" Value="Black"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                                                <Border x:Name="Bd" BorderBrush="LightGray" BorderThickness="1" Background="White" Height="Auto" SnapsToDevicePixels="True" Width="Auto">
                                                                                                                    <ScrollViewer x:Name="PART_ContentHost"/>
                                                                                                                </Border>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsFocused" Value="True">
                                                                                                                        <Setter Property="BorderBrush" TargetName="Bd" Value="LightGray"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                        <Setter Property="Opacity" Value="1"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                        <Setter Property="Opacity" Value="0.1999"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </TextBox.Style>
                                                                                        </TextBox>
                                                                                        <TextBlock x:Name="PART_PageSeparator" Foreground="Black" FontSize="12" FontFamily="Segoe UI" Margin="3,0,0,0" Text="/" VerticalAlignment="Center"><Run /></TextBlock>
                                                                                        <TextBlock x:Name="PART_LableTotalPageCount" Foreground="Black" FontSize="12" FontFamily="Segoe UI" Margin="3,0,0,0" Text="100" VerticalAlignment="Center"><Run /></TextBlock>
                                                                                    </StackPanel>
                                                                                    <StackPanel Orientation="Horizontal"   Visibility="Collapsed">
                                                                                        <Button x:Name="PART_ButtonGoToFirstPage" Height="22" IsEnabled="False" Visibility="Collapsed" Margin="0,0,0,0" ToolTipService.ShowOnDisabled="True" Width="22">
                                                                                            <Button.Style>
                                                                                                <Style TargetType="{x:Type Button}">
                                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property= "Visibility" Value="Collapsed"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                                                <Grid>
                                                                                                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                        <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                            <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                        </Grid>
                                                                                                                    </Border>
                                                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                    <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                                </Grid>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                        <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                        <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Button.Style>
                                                                                            <Path Data="M17.999989,0.0030003171L17.999989,15.389999 7.6660047,7.6969998z M0,0L3.85,0 3.85,15.453 0,15.453z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Height="15.453" Canvas.Left="118.527" Stretch="Fill" Canvas.Top="1.906" Width="18"/>
                                                                                        </Button>
                                                                                        <Button x:Name="PART_ButtonGoToPreviousPage" Height="22" IsEnabled="False" Visibility="Collapsed" Margin="10,0,0,0" ToolTipService.ShowOnDisabled="True" Width="22">
                                                                                            <Button.Style>
                                                                                                <Style TargetType="{x:Type Button}">
                                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                                                <Grid>
                                                                                                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                        <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                            <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                        </Grid>
                                                                                                                    </Border>
                                                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                    <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                                </Grid>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                        <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                        <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Button.Style>
                                                                                            <Path Data="F1M309.352,82.7328L309.352,100.7328 297.263,91.7328z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Height="18" Canvas.Left="148.794" Stretch="Fill" Canvas.Top="0.61" Width="12.089"/>
                                                                                        </Button>
                                                                                        <Button x:Name="PART_ButtonGoToNextPage" Height="22" IsEnabled="False" Visibility="Collapsed" Margin="10,0,0,0" ToolTipService.ShowOnDisabled="True" Width="22">
                                                                                            <Button.Style>
                                                                                                <Style TargetType="{x:Type Button}">
                                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                                                <Grid>
                                                                                                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                        <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                            <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                        </Grid>
                                                                                                                    </Border>
                                                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                    <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                                </Grid>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                        <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                        <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Button.Style>
                                                                                            <Path Data="F1M332.7717,100.7773L332.7717,82.7773 344.8607,91.7773z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Height="18" Canvas.Left="184.303" Stretch="Fill" Canvas.Top="0.654" Width="12.089"/>
                                                                                        </Button>
                                                                                        <Button x:Name="PART_ButtonGoToLastPage" Height="22" IsEnabled="False" Visibility="Collapsed" Margin="10,0,0,0" ToolTipService.ShowOnDisabled="True" Width="22">
                                                                                            <Button.Style>
                                                                                                <Style TargetType="{x:Type Button}">
                                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                                                <Grid>
                                                                                                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                        <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                            <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                        </Grid>
                                                                                                                    </Border>
                                                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                    <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                                </Grid>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                        <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                        <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Button.Style>
                                                                                            <Path Data="M0,0.062001844L10.334001,7.7550024 0,15.449002z M14.15099,0L18.000983,0 18.000983,15.452997 14.15099,15.452997z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Height="15.453" Canvas.Left="207.881" Stretch="Fill" Canvas.Top="1.906" Width="18.001"/>
                                                                                        </Button>
                                                                                        <Rectangle x:Name="Part_ZoomToolsSeparator_0" Fill="#FF797979" HorizontalAlignment="Center" Height="17" Margin="10,0,0,0" VerticalAlignment="Center" Width="1.6"/>
                                                                                    </StackPanel>
                                                                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0" Height="24">
                                                                                        <Rectangle x:Name="Part_ToolsSeparator_0" Fill="#FF797979" HorizontalAlignment="Center" Height="17" Margin="5,0,0,0" VerticalAlignment="Center" Width="1.6"/>
                                                                                        <Button x:Name="PART_ButtonFitWidth" Height="24" IsEnabled="True" Margin="2,0,0,0" ToolTipService.ShowOnDisabled="True" Width="24">
                                                                                            <Button.Style>
                                                                                                <Style TargetType="{x:Type Button}">
                                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                                                <Grid>
                                                                                                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                        <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                            <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                        </Grid>
                                                                                                                    </Border>
                                                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                    <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                                </Grid>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                        <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                        <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Button.Style>
                                                                                            <Path Data="M4.1950208,6.8750029L5.9880234,6.8750029 4.369021,8.4940024 7.7150255,8.493002 7.7150255,9.6640015 4.5160208,9.6640015 6.0550233,11.203 4.1170207,11.203 1.9920173,9.078002z M11.945024,6.7959972L13.883016,6.7959972 16.008007,8.9209996 13.805017,11.124002 12.012023,11.124002 13.631017,9.5050002 10.28503,9.5059996 10.28503,8.3349982 13.484017,8.3349982z M1.2000142,1.199997L1.2000142,16.799995 16.800047,16.799995 16.800047,1.199997z M0,0L18,0 18,18 0,18z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Height="18" Canvas.Left="358.915" Stretch="Fill" Canvas.Top="0" Width="18"/>
                                                                                        </Button>
                                                                                        <Button x:Name="PART_ButtonFitPage" Height="24" IsEnabled="True" Margin="0,0,0,0" ToolTipService.ShowOnDisabled="True" Width="24">
                                                                                            <Button.Style>
                                                                                                <Style TargetType="{x:Type Button}">
                                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                                                <Grid>
                                                                                                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                        <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                            <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                        </Grid>
                                                                                                                    </Border>
                                                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                    <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                                </Grid>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                        <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                        <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Button.Style>
                                                                                            <Path Data="M8.494,10.284998L9.664999,10.284998 9.664999,13.483998 11.203998,11.944998 11.203998,13.882998 9.0789994,16.007998 6.8760011,13.804998 6.8760011,12.011998 8.4949999,13.630998z M4.194993,6.8750039L5.9879956,6.8750039 4.3689933,8.4940029 7.7149982,8.493003 7.7149982,9.6640019 4.5159936,9.6640019 6.054996,11.203001 4.116993,11.203001 1.9919901,9.0780025z M11.946006,6.7959973L13.883997,6.7959973 16.009,8.9209995 13.805994,11.123997 12.012992,11.123997 13.632013,9.5049996 10.286,9.5059991 10.286,8.3349928 13.48501,8.3349928z M8.9220011,1.9920006L11.125,4.1950009 11.125,5.9880009 9.5060006,4.3690009 9.5070008,7.7150009 8.3360015,7.7150009 8.3360015,4.5160007 6.7970026,6.0550008 6.7970026,4.1170008z M1.1999998,1.1999998L1.1999998,16.8 16.8,16.8 16.8,1.1999998z M0,0L18,0 18,18 0,18z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Height="18" Canvas.Left="329.148" Stretch="Fill" Width="18"/>
                                                                                        </Button>
                                                                                        <Rectangle x:Name="PART_AnnotationToolsSeparator" Fill="#FF797979" HorizontalAlignment="Center" Height="17" Margin="2,0,0,0" VerticalAlignment="Center" Width="1.6"/>
                                                                                        <Button x:Name="PART_ButtonTextSearch" FlowDirection="LeftToRight" Height="24" IsEnabled="True" Margin="0,0,0,0" Padding="0" ToolTipService.ShowOnDisabled="True" Width="32">
                                                                                            <Button.Style>
                                                                                                <Style TargetType="{x:Type Button}">
                                                                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                                                    <Setter Property="Template">
                                                                                                        <Setter.Value>
                                                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                                                <Grid>
                                                                                                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                        <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                            <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                        </Grid>
                                                                                                                    </Border>
                                                                                                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                    <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                                </Grid>
                                                                                                                <ControlTemplate.Triggers>
                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                        <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                        <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                    </Trigger>
                                                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                                                        <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                    </Trigger>
                                                                                                                </ControlTemplate.Triggers>
                                                                                                            </ControlTemplate>
                                                                                                        </Setter.Value>
                                                                                                    </Setter>
                                                                                                </Style>
                                                                                            </Button.Style>
                                                                                            <Path Data="F1M7.42,12.519C4.556,12.519 2.226,10.21 2.226,7.373 2.226,4.535 4.556,2.226 7.42,2.226 10.284,2.226 12.614,4.535 12.614,7.373 12.614,10.21 10.284,12.519 7.42,12.519 M17.671,15.907L13.426,11.69C14.312,10.476 14.84,8.987 14.84,7.373 14.84,3.301 11.518,0 7.42,0 3.322,0 0,3.301 0,7.373 0,11.445 3.322,14.745 7.42,14.745 9.087,14.745 10.62,14.193 11.859,13.271L16.102,17.487C16.32,17.702 16.603,17.81 16.887,17.81 17.173,17.81 17.459,17.701 17.676,17.482 18.109,17.045 18.108,16.341 17.671,15.907" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" Height="17.81" Canvas.Left="2" Canvas.Top="0" Width="18"/>
                                                                                        </Button>
                                                                                    </StackPanel>
                                                                                </WrapPanel>
                                                                            </Border>
                                                                        </TabItem>
                                                                        <TabItem x:Name="PART_DocPDFtoolbarMORE" Header="More" FontFamily="Lucida Sans" FontSize="10" Margin="0,-2,0,0">
                                                                            <Border Background="White" BorderThickness="1" CornerRadius="3" Padding="1" Margin="0,-2,0,0" BorderBrush="#FFACACAC" Height="Auto">
                                                                                <WrapPanel Margin="2,4,0,0">
                                                                                    <Button x:Name="PART_ButtonSignature" FlowDirection="LeftToRight" Height="24" Margin="0,0,0,0" Padding="0" ToolTipService.ShowOnDisabled="False" Width="32">
                                                                                        <Button.Style>
                                                                                            <Style TargetType="{x:Type Button}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </Button.Style>
                                                                                        <Path Data="M10.594223,12.000247C10.679993,11.9984 10.766571,12.007084 10.853009,12.026773 11.314008,12.130779 11.649008,12.523802 11.750008,13.075835L11.973009,14.302908 12.214009,14.022892C12.548008,13.632868 13.003008,13.473858 13.431009,13.596866 13.806009,13.703872 14.089009,14.00489 14.222008,14.421915L14.980009,13.525862 16.000008,14.384913 15.040008,15.523981C14.779008,15.833998 14.442008,16.001009 14.101008,16.001009 14.006009,16.001009 13.912009,15.989008 13.819008,15.963007 13.440009,15.857 13.154008,15.552982 13.022008,15.131957L12.770009,15.422974C12.441008,15.807997 11.992009,15.969007 11.566008,15.854 11.126008,15.734993 10.807008,15.34597 10.710008,14.815939L10.496008,13.629868 9.0820088,15.578984 8.0000085,14.796938 9.6020083,12.578806C9.8660702,12.213972,10.222555,12.008245,10.594223,12.000247z M7.3437535,4.4531275L2.8281263,6.4531286 1.7500008,11.14584 4.1527657,8.7119986C3.985769,8.351998 4.0437693,7.9140025 4.340774,7.6169978 4.7217807,7.2360011 5.3388013,7.2360011 5.7188162,7.6169978 6.099823,7.9970027 6.099823,8.613999 5.7188162,8.9950033 5.4218115,9.2920014 4.9837966,9.35 4.6237864,9.1839997L2.2500011,11.58334 6.7656282,10.515631 8.9375043,5.9062533z M8.5078911,0L10.000005,0.79687545 8.7812542,3.3906269 10.062505,4.6406276 12.656256,3.4062519 13.334007,4.8270041 10.537943,6.1650015 8.1218791,11.606004C8.0338797,11.806001,7.8548741,11.948,7.6408639,11.989999L0.79368348,13.323999C0.75169022,13.333002 0.70867456,13.337 0.6666813,13.337 0.49068178,13.337 0.32067914,13.267999 0.19466862,13.142 0.037666917,12.985002 -0.030343298,12.761003 0.012656989,12.543001L1.3457,5.6950003C1.3876934,5.4810034,1.5307024,5.3020025,1.7297128,5.212998L7.1698584,2.7979969z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Button}}}" HorizontalAlignment="Left" Height="22" Stretch="Fill" VerticalAlignment="Top" Width="22"/>
                                                                                    </Button>
                                                                                    <ToggleButton x:Name="PART_Stamp" Height="24" IsEnabled="True" Margin="0,0,0,0" Padding="0" Width="40">
                                                                                        <ToggleButton.ContextMenu>
                                                                                            <ContextMenu Placement="MousePoint">
                                                                                                <ContextMenu.Resources>
                                                                                                    <Style x:Key="{x:Type Rectangle}" TargetType="{x:Type Rectangle}">
                                                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                                                    </Style>
                                                                                                </ContextMenu.Resources>
                                                                                                <MenuItem x:Name="PART_StandardMenu" Height="28">
                                                                                                    <MenuItem.Style>
                                                                                                        <Style TargetType="{x:Type MenuItem}">
                                                                                                            <Setter Property="Template">
                                                                                                                <Setter.Value>
                                                                                                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                                                                                                        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                                                                            <Grid x:Name="Grid" Margin="-1">
                                                                                                                                <Grid.ColumnDefinitions>
                                                                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                                                                    <ColumnDefinition Width="13"/>
                                                                                                                                    <ColumnDefinition Width="*"/>
                                                                                                                                    <ColumnDefinition Width="30"/>
                                                                                                                                    <ColumnDefinition Width="20"/>
                                                                                                                                </Grid.ColumnDefinitions>
                                                                                                                                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Margin="8,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="Auto"/>
                                                                                                                                <Border x:Name="GlyphPanel" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                                                                                                                                    <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" FlowDirection="LeftToRight" Height="11" Width="9"/>
                                                                                                                                </Border>
                                                                                                                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                                                                                                                <TextBlock x:Name="TextBlock" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                                                                                                                                <Path x:Name="RightArrow" Grid.Column="5" Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                                                                                                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" MaxWidth="300" Placement="Left">
                                                                                                                                    <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0">
                                                                                                                                        <Grid>
                                                                                                                                            <Grid.RowDefinitions>
                                                                                                                                                <RowDefinition/>
                                                                                                                                                <RowDefinition/>
                                                                                                                                            </Grid.RowDefinitions>
                                                                                                                                            <ScrollViewer x:Name="SubMenuScrollViewer" Grid.Row="0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" VerticalScrollBarVisibility="Auto">
                                                                                                                                                <Grid x:Name="Grid1">
                                                                                                                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                                                                                                                </Grid>
                                                                                                                                            </ScrollViewer>
                                                                                                                                        </Grid>
                                                                                                                                    </Border>
                                                                                                                                </Popup>
                                                                                                                            </Grid>
                                                                                                                        </Border>
                                                                                                                        <ControlTemplate.Triggers>
                                                                                                                            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                                                                                                                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                                                                                                            </Trigger>
                                                                                                                            <Trigger Property="Icon" Value="{x:Null}">
                                                                                                                                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                                                                                                            </Trigger>
                                                                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                                                                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                                                                                                                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                                                                                                            </Trigger>
                                                                                                                            <Trigger Property="IsHighlighted" Value="True">
                                                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                                                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                                                                                                                                <Setter Property="IsOpen" TargetName="PART_Popup" Value="True"/>
                                                                                                                            </Trigger>
                                                                                                                            <Trigger Property="HasItems" Value="True">
                                                                                                                                <Setter Property="Visibility" TargetName="RightArrow" Value="Visible"/>
                                                                                                                            </Trigger>
                                                                                                                            <Trigger Property="HasItems" Value="False">
                                                                                                                                <Setter Property="Visibility" TargetName="RightArrow" Value="Collapsed"/>
                                                                                                                            </Trigger>
                                                                                                                        </ControlTemplate.Triggers>
                                                                                                                    </ControlTemplate>
                                                                                                                </Setter.Value>
                                                                                                            </Setter>
                                                                                                        </Style>
                                                                                                    </MenuItem.Style>
                                                                                                </MenuItem>
                                                                                                <MenuItem x:Name="PART_CustomStamp" Height="28">
                                                                                                    <MenuItem.Style>
                                                                                                        <Style TargetType="{x:Type MenuItem}">
                                                                                                            <Setter Property="Template">
                                                                                                                <Setter.Value>
                                                                                                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                                                                                                        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                                                                            <Grid x:Name="Grid" Margin="-1">
                                                                                                                                <Grid.ColumnDefinitions>
                                                                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                                                                    <ColumnDefinition Width="13"/>
                                                                                                                                    <ColumnDefinition Width="*"/>
                                                                                                                                    <ColumnDefinition Width="30"/>
                                                                                                                                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                                                                                                                    <ColumnDefinition Width="20"/>
                                                                                                                                </Grid.ColumnDefinitions>
                                                                                                                                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Grid.Column="0" ContentSource="Icon" HorizontalAlignment="Center" Margin="8,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="Auto"/>
                                                                                                                                <Border x:Name="GlyphPanel" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                                                                                                                                    <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" FlowDirection="LeftToRight" Height="11" Width="9"/>
                                                                                                                                </Border>
                                                                                                                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                                                                                                                <TextBlock x:Name="TextBlock" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                                                                                                                                <Path x:Name="RightArrow" Grid.Column="5" Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                                                                                                                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" MaxWidth="300" Placement="Left">
                                                                                                                                    <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0">
                                                                                                                                        <Grid>
                                                                                                                                            <Grid.RowDefinitions>
                                                                                                                                                <RowDefinition/>
                                                                                                                                                <RowDefinition/>
                                                                                                                                            </Grid.RowDefinitions>
                                                                                                                                            <ScrollViewer x:Name="SubMenuScrollViewer" MaxHeight="400" Grid.Row="0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" VerticalScrollBarVisibility="Auto">
                                                                                                                                                <Grid x:Name="Grid1">
                                                                                                                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                                                                                                                </Grid>
                                                                                                                                            </ScrollViewer>
                                                                                                                                            <MenuItem x:Name="PART_Browse" Header="Add Stamp" Height="28" Grid.Row="1">
                                                                                                                                                <MenuItem.Icon>
                                                                                                                                                    <Path Data="M8,0L8,6 14,6 14,8 8,8 8,14 6,14 6,7.999 -5.68434189E-14,8 -5.68434189E-14,6 6,5.999 6,0 8,0z">
                                                                                                                                                        <Path.Style>
                                                                                                                                                            <Style TargetType="{x:Type Path}">
                                                                                                                                                                <Style.Triggers>
                                                                                                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                                                                                                        <Setter Property="Fill" Value="#FF485F77"/>
                                                                                                                                                                    </Trigger>
                                                                                                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                                                                                                        <Setter Property="Fill" Value="#55475F77"/>
                                                                                                                                                                    </Trigger>
                                                                                                                                                                </Style.Triggers>
                                                                                                                                                            </Style>
                                                                                                                                                        </Path.Style>
                                                                                                                                                    </Path>
                                                                                                                                                </MenuItem.Icon>
                                                                                                                                                <MenuItem.Style>
                                                                                                                                                    <Style TargetType="{x:Type MenuItem}">
                                                                                                                                                        <Setter Property="Template">
                                                                                                                                                            <Setter.Value>
                                                                                                                                                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                                                                                                                                                    <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                                                                                                                        <Grid x:Name="Grid" Margin="-1">
                                                                                                                                                                            <Grid.ColumnDefinitions>
                                                                                                                                                                                <ColumnDefinition Width="Auto"/>
                                                                                                                                                                                <ColumnDefinition Width="13"/>
                                                                                                                                                                                <ColumnDefinition Width="*"/>
                                                                                                                                                                                <ColumnDefinition Width="30"/>
                                                                                                                                                                                <ColumnDefinition Width="20"/>
                                                                                                                                                                            </Grid.ColumnDefinitions>
                                                                                                                                                                            <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Margin="8,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="Auto"/>
                                                                                                                                                                            <Border x:Name="GlyphPanel" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                                                                                                                                                                                <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" FlowDirection="LeftToRight" Height="11" Width="9"/>
                                                                                                                                                                            </Border>
                                                                                                                                                                            <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                                                                                                                                                            <TextBlock x:Name="TextBlock" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                                                                                                                                                                            <Path x:Name="RightArrow" Grid.Column="5" Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                                                                                                                                                                            <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" MaxWidth="300" Placement="Left">
                                                                                                                                                                                <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#FFF0F0F0">
                                                                                                                                                                                    <Grid>
                                                                                                                                                                                        <Grid.RowDefinitions>
                                                                                                                                                                                            <RowDefinition/>
                                                                                                                                                                                            <RowDefinition/>
                                                                                                                                                                                        </Grid.RowDefinitions>
                                                                                                                                                                                        <ScrollViewer x:Name="SubMenuScrollViewer" Grid.Row="0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" VerticalScrollBarVisibility="Auto">
                                                                                                                                                                                            <Grid x:Name="Grid1">
                                                                                                                                                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                                                                                                                                                            </Grid>
                                                                                                                                                                                        </ScrollViewer>
                                                                                                                                                                                    </Grid>
                                                                                                                                                                                </Border>
                                                                                                                                                                            </Popup>
                                                                                                                                                                        </Grid>
                                                                                                                                                                    </Border>
                                                                                                                                                                    <ControlTemplate.Triggers>
                                                                                                                                                                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                                                                                                                                                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                                                                                                                                                        </Trigger>
                                                                                                                                                                        <Trigger Property="Icon" Value="{x:Null}">
                                                                                                                                                                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                                                                                                                                                        </Trigger>
                                                                                                                                                                        <Trigger Property="IsChecked" Value="True">
                                                                                                                                                                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                                                                                                                                                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                                                                                                                                                        </Trigger>
                                                                                                                                                                        <Trigger Property="IsHighlighted" Value="True">
                                                                                                                                                                            <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                                                                                                                                                                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                                                                                                                                                                            <Setter Property="IsOpen" TargetName="PART_Popup" Value="True"/>
                                                                                                                                                                        </Trigger>
                                                                                                                                                                        <Trigger Property="HasItems" Value="True">
                                                                                                                                                                            <Setter Property="Visibility" TargetName="RightArrow" Value="Visible"/>
                                                                                                                                                                        </Trigger>
                                                                                                                                                                        <Trigger Property="HasItems" Value="False">
                                                                                                                                                                            <Setter Property="Visibility" TargetName="RightArrow" Value="Collapsed"/>
                                                                                                                                                                        </Trigger>
                                                                                                                                                                    </ControlTemplate.Triggers>
                                                                                                                                                                </ControlTemplate>
                                                                                                                                                            </Setter.Value>
                                                                                                                                                        </Setter>
                                                                                                                                                    </Style>
                                                                                                                                                </MenuItem.Style>
                                                                                                                                            </MenuItem>
                                                                                                                                        </Grid>
                                                                                                                                    </Border>
                                                                                                                                </Popup>
                                                                                                                            </Grid>
                                                                                                                        </Border>
                                                                                                                        <ControlTemplate.Triggers>
                                                                                                                            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                                                                                                                                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                                                                                                            </Trigger>
                                                                                                                            <Trigger Property="Icon" Value="{x:Null}">
                                                                                                                                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                                                                                                                            </Trigger>
                                                                                                                            <Trigger Property="HasItems" Value="True">
                                                                                                                                <Setter Property="BorderBrush" TargetName="PART_Browse" Value="#FF999999"/>
                                                                                                                                <Setter Property="BorderThickness" TargetName="PART_Browse" Value="0,0.5,0,0"/>
                                                                                                                            </Trigger>
                                                                                                                            <Trigger Property="IsHighlighted" Value="True">
                                                                                                                                <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                                                                                                                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                                                                                                                                <Setter Property="IsOpen" TargetName="PART_Popup" Value="True"/>
                                                                                                                            </Trigger>
                                                                                                                        </ControlTemplate.Triggers>
                                                                                                                    </ControlTemplate>
                                                                                                                </Setter.Value>
                                                                                                            </Setter>
                                                                                                        </Style>
                                                                                                    </MenuItem.Style>
                                                                                                </MenuItem>
                                                                                            </ContextMenu>
                                                                                        </ToggleButton.ContextMenu>
                                                                                        <ToggleButton.Style>
                                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="Gray"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                    <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ToggleButton.Style>
                                                                                        <Grid Height="16.373" Width="31.98">
                                                                                            <Path Data="M2,14L14,14 14,16 2,16z M20,7.0000002L27,7.0000002 23.5,10.5z M7.9998398,2C7.3118286,2 6.7968197,2.1999998 6.4248133,2.612 5.7988024,3.306 5.9298048,4.4230001 6.3838129,5.1689999 7.8888378,7.647 7.905838,10.482 7.905838,10.602L7.905838,11 8.0938416,11 8.0938416,10.602C8.0938416,10.482 8.1118422,7.647 9.6168671,5.1689999 10.069875,4.4230001 10.200877,3.306 9.5748663,2.612 9.2028608,2.1999998 8.6878519,2 7.9998398,2z M7.9998398,0C9.2488613,0 10.307879,0.43900013 11.059892,1.2709999 12.207911,2.5440001 12.318913,4.573 11.325896,6.2069999 10.107876,8.2130001 10.093876,10.578 10.093876,10.602L10.093876,11 16,11 16,13 0,13 0,11 5.906805,11 5.906805,10.602C5.906805,10.58 5.8818045,8.1950001 4.6747837,6.2080001 3.6817665,4.5739999 3.7907696,2.5450001 4.9407883,1.2719998 5.6918011,0.43900013 6.7498188,0 7.9998398,0z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Margin="0.224,0,0,0" Stretch="Fill"/>
                                                                                        </Grid>
                                                                                    </ToggleButton>
                                                                                    <ToggleButton x:Name="PART_SelectTool" IsEnabled="true" FlowDirection="LeftToRight" Height="24" IsChecked="True" Margin="0,0,0,0" Padding="0" Width="32">
                                                                                        <ToggleButton.Style>
                                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="Gray"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                    <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ToggleButton.Style>
                                                                                        <Path Data="M0.78302145,0C0.99802709,0,1.1830295,0.063003369,1.3360333,0.18700552L1.3360333,0.14900422 10.689277,7.8572168C10.867283,8.0072203 10.969287,8.1882267 10.994285,8.399231 11.019287,8.6122389 10.962286,8.7992439 10.823283,8.9612474 10.682277,9.1242514 10.523272,9.2172546 10.34527,9.2422552L7.7872014,9.7652702 9.5442467,13.506374C9.6452503,13.731379 9.6592512,13.944386 9.5822496,14.143389 9.5052481,14.343395 9.3662443,14.493401 9.1622362,14.591403L6.2231612,15.93944C6.018158,16.013443 5.8151498,16.01944 5.6121454,15.958442 5.4081416,15.89544 5.2551379,15.764436 5.1541333,15.565429L3.3600881,11.786325 1.3360333,13.394368C1.1830295,13.495373 0.99802709,13.544374 0.78302145,13.544374 0.56601667,13.544374 0.38200998,13.469371 0.22900605,13.320369 0.077001743,13.170362 7.8607513E-08,12.983357 0,12.758352L0,0.7860229C7.8607513E-08,0.56101632 0.077001743,0.37401083 0.22900605,0.22400713 0.38200998,0.075002827 0.56601667,0 0.78302145,0z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Height="18" Stretch="Uniform" Width="16"/>
                                                                                    </ToggleButton>
                                                                                    <ToggleButton x:Name="PART_HandTool" IsEnabled="True" FlowDirection="LeftToRight" Height="24" Margin="0,0,0,0" Padding="0" Width="32">
                                                                                        <ToggleButton.Style>
                                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="Gray"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                    <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ToggleButton.Style>
                                                                                        <Path Data="M12.5,0C13.33,0,14,0.67000002,14,1.5L14,11 15,11 15,2.5C15,1.67 15.67,1 16.5,1.0000001 17.33,1 18,1.67 18,2.5L18,11 19,11 19,5.5C19,4.6700001 19.67,4 20.5,4 21.33,4 22,4.6700001 22,5.5L22,20C22,22.200001,20.200001,24,18,24L10.7,24C9.6199998,24,8.6000003,23.57,7.8500003,22.809999L7.1054274E-15,14.83C-1.1920928E-07,14.83 1.2599999,13.6 1.2999998,13.58 1.5199999,13.39 1.7899998,13.29 2.0899998,13.29 2.3099998,13.29 2.5099999,13.35 2.6899999,13.45 2.7299999,13.46 6.9999999,15.91 6.9999999,15.91L6.9999999,4C6.9999999,3.1700001 7.67,2.5 8.4999999,2.5 9.3299998,2.5 9.9999999,3.1700001 9.9999999,4L9.9999999,11 11,11 11,1.5C11,0.67000002,11.67,0,12.5,0z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Height="18" Stretch="Fill" Width="16"/>
                                                                                    </ToggleButton>
                                                                                    <ToggleButton x:Name="PART_MarqueeZoom" IsEnabled="False" Visibility="Collapsed" FlowDirection="LeftToRight" Height="24" Margin="0,0,0,0" Padding="0" Width="32">
                                                                                        <ToggleButton.Style>
                                                                                            <Style TargetType="{x:Type ToggleButton}">
                                                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                                                <Setter Property="Background" Value="Transparent"/>
                                                                                                <Setter Property="Template">
                                                                                                    <Setter.Value>
                                                                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                                            <Grid>
                                                                                                                <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="Transparent" CornerRadius="3">
                                                                                                                    <Grid Background="{TemplateBinding Background}" Margin="1">
                                                                                                                        <Border x:Name="BackgroundAnimation" Background="Transparent" Opacity="0"/>
                                                                                                                    </Grid>
                                                                                                                </Border>
                                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                                                <Rectangle x:Name="DisabledVisualElement" Fill="Transparent" IsHitTestVisible="False" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                                                                                <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                                                            </Grid>
                                                                                                            <ControlTemplate.Triggers>
                                                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                                                    <Setter Property="Foreground" Value="#FF475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsEnabled" Value="False">
                                                                                                                    <Setter Property="Foreground" Value="#55475F77"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFD5DBDF"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFBDC4C8"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="Gray"/>
                                                                                                                </Trigger>
                                                                                                                <Trigger Property="IsChecked" Value="True">
                                                                                                                    <Setter Property="Background" Value="#FFC8CFD3"/>
                                                                                                                    <Setter Property="Foreground" Value="#FF27415B"/>
                                                                                                                </Trigger>
                                                                                                            </ControlTemplate.Triggers>
                                                                                                        </ControlTemplate>
                                                                                                    </Setter.Value>
                                                                                                </Setter>
                                                                                            </Style>
                                                                                        </ToggleButton.Style>
                                                                                        <Path Data="M14.951001,11.5L15.951001,11.5 15.951001,13 14.451001,13 14.451001,12 14.951001,12z M14.951001,7.4999995L15.951001,7.4999995 15.951001,9.499999 14.951001,9.499999z M6.9509997,6C5.2939987,6 3.9509993,7.3430004 3.9509993,9 3.9509993,10.657 5.2939987,12 6.9509997,12 8.6079988,12 9.9509983,10.657 9.9509983,9 9.9509983,7.3430004 8.6079988,6 6.9509997,6z M14.951001,3.4999995L15.951001,3.4999995 15.951001,5.4999995 14.951001,5.4999995z M2.9509985,3.4999993L3.9509983,3.4999993 3.9509983,5.0002084 3.9596014,4.9934473C4.7938371,4.3695221 5.8293433,3.9999998 6.9509997,3.9999998 9.7119999,3.9999998 11.950998,6.2390003 11.950998,9 11.950998,10.122062 11.581476,11.157644 10.957551,11.991827L10.951283,12.000003 12.450998,12.000003 12.450998,13.000003 10.450998,13.000003 10.450998,12.570287 10.400537,12.619552C9.5032473,13.474922 8.2883596,14 6.9509997,14 6.0019059,14 5.1144934,13.735549 4.3585057,13.276267L4.261961,13.216009 1.7159237,15.761974C1.5269194,15.948974 1.2719134,16.053972 1.0059075,16.051973 0.7399013,16.053972 0.48489594,15.948974 0.29589152,15.761974 -0.096117616,15.372976 -0.099117398,14.739981 0.28989136,14.347984L0.29589152,14.341984 2.8202274,11.817718 2.8050323,11.7958C2.2658582,10.997812 1.9509988,10.035749 1.9509987,9 1.9509988,7.705781 2.4429667,6.5262594 3.2500567,5.6382809L3.381897,5.4999995 2.9509985,5.4999995z M14.451001,0L15.951001,0 15.951001,1.5 14.951001,1.5 14.951001,1 14.451001,1z M10.450998,0L12.450998,0 12.450998,1 10.450998,1z M6.4509988,0L8.4509983,0 8.4509983,1 6.4509988,1z M2.9509985,0L4.4509983,0 4.4509983,1 3.9509983,1 3.9509983,1.5 2.9509985,1.5z" Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ToggleButton}}}" Height="18" Stretch="Fill" Width="16"/>
                                                                                    </ToggleButton>
                                                                                </WrapPanel>
                                                                            </Border>
                                                                        </TabItem>
                                                                    </TabControl>
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </PdfViewer:DocumentToolbar.Resources>
                                        </PdfViewer:DocumentToolbar>
                                        <PdfViewer:RedactionToolbar x:Name="PART_RedactToolbar" Height="40" Width="Auto"/>
                                        <Grid x:Name="PART_Grid">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"/>
                                                <ColumnDefinition Width="0"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <PdfViewer:OutlinePane x:Name="PART_OutlinePane" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2"/>
                                            <PdfViewer:ThumbnailPane x:Name="PART_ThumbnailPanel" Grid.Column="1" Grid.Row="1"/>
                                            <PdfViewer:BookmarkLabel x:Name="PART_BookmarkLabel" Grid.Column="1" Height="30" Grid.Row="0"/>
                                            <PdfViewer:BookmarkPane x:Name="PART_Tree" Grid.Column="1" Grid.Row="1"/>
                                            <PdfViewer:LayerPane x:Name="PART_LayerPane" Grid.Column="1" Grid.Row="1"/>
                                            <PdfViewer:PdfDocumentView x:Name="PART_DocumentView" AnnotationMode="None" CurrentPageOnPrint="0" CursorMode="SelectTool" Grid.Column="2" ScrollViewer.HorizontalScrollBarVisibility="Auto" IsTextSearchEnabled="True" IsTextSelectionEnabled="True" LoadingIndicator="{x:Null}" LoadedDocument="{x:Null}" MinimumZoomPercentage="50" MaximumZoomPercentage="400" PrintWidth="0" ProgressIndicator="{x:Null}" PrintHeight="0" PrintToPage="0" PrintFromPage="0" Grid.Row="0" Grid.RowSpan="2" ReferencePath="{x:Null}" ShowHorizontalScrollBar="True" ShowScrollbar="True" ShowVerticalScrollBar="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                                <PdfViewer:PdfDocumentView.ArrowAnnotationSettings>
                                                    <PdfViewer:PdfViewerArrowSettings Author="User1" BeginLineStyle="None" EndLineStyle="OpenArrow" FillColor="Transparent" Opacity="1" Subject="" StrokeColor="Red" Thickness="2" Text=""/>
                                                </PdfViewer:PdfDocumentView.ArrowAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.CircleAnnotationSettings>
                                                    <PdfViewer:PdfViewerCircleSettings Author="User1" CircleColor="Red" FillColor="Transparent" Opacity="1" Subject="" Thickness="2" Text=""/>
                                                </PdfViewer:PdfDocumentView.CircleAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.FreeTextAnnotationSettings>
                                                    <PdfViewer:PdfViewerFreeTextSettings Author="User1" Borderthickness="2" BorderThickness="2" BorderColor="#FF4A90E2" Background="White" FontColor="Black" FontSize="12" FontFamily="Arial" Height="87" Opacity="1" Subject="" Text="" Width="147"/>
                                                </PdfViewer:PdfDocumentView.FreeTextAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.HandwrittenSignatureSettings>
                                                    <PdfViewer:HandwrittenSignatureSettings Color="Black" FlattenSignatureOnSave="False" Opacity="1"/>
                                                </PdfViewer:PdfDocumentView.HandwrittenSignatureSettings>
                                                <PdfViewer:PdfDocumentView.HighlightAnnotationSettings>
                                                    <PdfViewer:PdfViewerHighlightSettings Author="User1" HighlightColor="Yellow" Opacity="1" Subject="" Text=""/>
                                                </PdfViewer:PdfDocumentView.HighlightAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.InkAnnotationSettings>
                                                    <PdfViewer:PdfViewerInkSettings Author="User1" InkColor="Red" Opacity="1" Subject="" Thickness="2" Text=""/>
                                                </PdfViewer:PdfDocumentView.InkAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.LineAnnotationSettings>
                                                    <PdfViewer:PdfViewerLineSettings Author="User1" LineColor="Red" Opacity="1" Subject="" Thickness="2" Text=""/>
                                                </PdfViewer:PdfDocumentView.LineAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.PrinterSettings>
                                                    <PdfViewer:PdfViewerPrinterSettings Copies="1" DocumentName="{x:Null}" ShowPrintStatusDialog="True"/>
                                                </PdfViewer:PdfDocumentView.PrinterSettings>
                                                <PdfViewer:PdfDocumentView.PageBorder>
                                                    <PdfViewer:PageBorder IsVisible="True"/>
                                                </PdfViewer:PdfDocumentView.PageBorder>
                                                <PdfViewer:PdfDocumentView.PolygonAnnotationSettings>
                                                    <PdfViewer:PdfViewerPolygonSettings Author="User1" FillColor="Transparent" Opacity="1" Subject="" StrokeColor="Red" Thickness="2" Text=""/>
                                                </PdfViewer:PdfDocumentView.PolygonAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.PolylineAnnotationSettings>
                                                    <PdfViewer:PdfViewerPolylineSettings Author="User1" Opacity="1" Subject="" StrokeColor="Red" Thickness="2" Text=""/>
                                                </PdfViewer:PdfDocumentView.PolylineAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.RectangleAnnotationSettings>
                                                    <PdfViewer:PdfViewerRectangleSettings Author="User1" FillColor="Transparent" Opacity="1" RectangleColor="Red" Subject="" Thickness="2" Text=""/>
                                                </PdfViewer:PdfDocumentView.RectangleAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.StrikethroughAnnotationSettings>
                                                    <PdfViewer:PdfViewerStrikethroughSettings Author="User1" Opacity="1" StrikethroughColor="Red" Subject="" Text=""/>
                                                </PdfViewer:PdfDocumentView.StrikethroughAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.StampAnnotationSettings>
                                                    <PdfViewer:PdfViewerStampSettings Author="User1" Color="Red" Icon="Approved" Opacity="1" Subject="" Text=""/>
                                                </PdfViewer:PdfDocumentView.StampAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.StickyNoteAnnotationSettings>
                                                    <PdfViewer:PdfViewerStickyNoteSettings Author="User1" Color="#FFF2C406" Icon="Comment" Opacity="1" Subject="" Text=""/>
                                                </PdfViewer:PdfDocumentView.StickyNoteAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.UnderlineAnnotationSettings>
                                                    <PdfViewer:PdfViewerUnderlineSettings Author="User1" Opacity="1" Subject="" Text="" UnderlineColor="DarkGreen"/>
                                                </PdfViewer:PdfDocumentView.UnderlineAnnotationSettings>
                                                <PdfViewer:PdfDocumentView.UndoRedoSettings>
                                                    <PdfViewer:UndoRedoSettings Limit="100"/>
                                                </PdfViewer:PdfDocumentView.UndoRedoSettings>
                                            </PdfViewer:PdfDocumentView>
                                            <PdfViewer:NotificationBar x:Name="PART_NotificationBar" Grid.Column="2" Height="Auto" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Top" Width="Auto"/>
                                            <StackPanel x:Name="PART_FontPopUp" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Visibility="Collapsed">
                                                <Path x:Name="TopArrow" Data="M55.3765,94.6777L63.0005,85.7667 70.6235,94.6777" Fill="#FFF4F4F4" HorizontalAlignment="Left" Height="10.911" Margin="946,-8,0,0" StrokeStartLineCap="Flat" Stretch="Fill" StrokeEndLineCap="Flat" Stroke="LightGray" StrokeThickness="1.5" StrokeMiterLimit="10" StrokeLineJoin="Miter" VerticalAlignment="Top" Width="17.247" Panel.ZIndex="2"/>
                                                <PdfViewer:FontPropertiesDialog x:Name="PART_FreeText" Height="Auto" Margin="700,-2,0,0" VerticalAlignment="Top" Width="Auto"/>
                                            </StackPanel>
                                            <PdfViewer:TextSearchBar x:Name="PART_TextSearchBar" Grid.Column="2" HorizontalAlignment="Right" Height="Auto" Margin="5,5,25,25" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Top" Width="Auto"/>
                                            <StackPanel x:Name="PART_AddSignaturePanel" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Visibility="Collapsed">
                                                <PdfViewer:SignaturePanel x:Name="PART_AddSignatureDialog" Height="Auto" Margin="700,-2,0,0" VerticalAlignment="Top" Width="Auto"/>
                                            </StackPanel>
                                        </Grid>
                                    </StackPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </PdfViewer:PdfViewerControl.Resources>
        </PdfViewer:PdfViewerControl>
        <Border Grid.Column="1" Grid.Row="1" CornerRadius="3" BorderThickness="1" BorderBrush="White" Margin="0,0,4,5">
            <Grid x:Name="NotebookGrid" Background="#FFF7F7F7">
                <Grid.RowDefinitions>
                    <RowDefinition Height="70*" MaxHeight="70" />
                    <RowDefinition Height="322*" />
                </Grid.RowDefinitions>
                <syncfusion:SfRichTextBoxAdv x:Name="Notebook" 
                                         ZoomFactor="75"
                                         Grid.Row="1"
                                         Style="{DynamicResource NotebookStyle}" 
                                         HorizontalScrollBarVisibility="False" 
                                         EnableMiniToolBar="False" 
                                         AcceptsTab="True"  Background="{x:Null}" BorderThickness="0" DockPanel.Dock="Bottom" Grid.IsSharedSizeScope="True" AllowDrop="True" LayoutType="Continuous" Margin="1,1,1,0" LostFocusBehavior="ShowSelection" DataContext="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" ForceCursor="True">
                    <syncfusion:SfRichTextBoxAdv.Resources>
                        <Style x:Key="NotebookStyle" TargetType="{x:Type syncfusion:SfRichTextBoxAdv}">
                            <Setter Property="Background" Value="Gainsboro"/>
                            <Setter Property="SelectionBrush" Value="PaleTurquoise"/>
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <ContextMenu.Resources>
                                            <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                                                            <Border BorderBrush="#FFD7D7D7" BorderThickness="1" Background="White" Margin="10">
                                                                <Border.Effect>
                                                                    <DropShadowEffect BlurRadius="7" Color="Black" Direction="315" Opacity="0.5" ShadowDepth="2"/>
                                                                </Border.Effect>
                                                                <StackPanel IsItemsHost="True" Margin="1" Orientation="Vertical"/>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                                <Border x:Name="Border" Background="White">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="30"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="30"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Margin="0" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                        <ContentPresenter x:Name="HeaderHost" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Stretch" Margin="4,0,0,0" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                        <Path Grid.Column="3" Data="M0,0L0,7 4,3.5z" Fill="#FF333333" HorizontalAlignment="Right" Height="12" Margin="0,6,0,0" SnapsToDevicePixels="True" VerticalAlignment="Center" Width="12"/>
                                                        <Popup x:Name="Popup" HorizontalOffset="-2" IsOpen="{TemplateBinding IsSubmenuOpen}" PopupAnimation="Fade" Placement="Left">
                                                            <Border x:Name="SubmenuBorder" BorderBrush="#FFD7D7D7" BorderThickness="1" Background="White">
                                                                <Border.Effect>
                                                                    <DropShadowEffect BlurRadius="30" Color="Black" Direction="315" Opacity="0.5" ShadowDepth="2"/>
                                                                </Border.Effect>
                                                                <StackPanel IsItemsHost="True" Margin="1" Orientation="Vertical"/>
                                                            </Border>
                                                        </Popup>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsHighlighted" Value="True">
                                                        <Setter Property="Background" TargetName="Border" Value="#FFD5DDEB"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                            <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                                                <Style.Resources>
                                                    <Style x:Key="{x:Type Image}" TargetType="{x:Type Image}">
                                                        <Setter Property="Height" Value="16"/>
                                                        <Setter Property="Width" Value="16"/>
                                                    </Style>
                                                </Style.Resources>
                                                <Setter Property="Height" Value="26"/>
                                                <Setter Property="FontFamily" Value="Segoe UI"/>
                                                <Setter Property="FontSize" Value="12"/>
                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                <Setter Property="Foreground" Value="#FF333333"/>
                                            </Style>
                                            <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                                <Border x:Name="Border" Background="White">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="30"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="30"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Grid.Column="0" ContentSource="Icon" HorizontalAlignment="Center" Margin="0" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                        <ContentPresenter x:Name="HeaderHost" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Stretch" Margin="4,0,0,0" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsHighlighted" Value="True">
                                                        <Setter Property="Background" TargetName="Border" Value="#FFD5DDEB"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" TargetName="Icon" Value="0.5"/>
                                                        <Setter Property="Opacity" TargetName="HeaderHost" Value="0.5"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ContextMenu.Resources>
                                        <Separator/>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.IgnoreAllSpellingErrorsCommand" Header="{Binding ContextMenuIgnoreAll}" Visibility="Collapsed"/>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.AddToDictionaryCommand" Header="{Binding ContextMenuAddToDictionary}" Visibility="Collapsed"/>
                                        <Separator/>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.CutCommand" Header="{Binding ContextMenuCut}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Cut_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.CopyCommand" Header="{Binding ContextMenuCopy}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Copy_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.PasteCommand" Header="{Binding ContextMenuPaste}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Paste_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem CommandParameter="EditHyperlink" Command="syncfusion:SfRichTextBoxAdv.ShowHyperlinkDialogCommand" Header="{Binding ContextMenuEditHyperlink}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Hyperlink_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.NavigateHyperlinkCommand" Header="{Binding ContextMenuOpenHyperlink}"/>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.CopyHyperlinkCommand" Header="{Binding ContextMenuCopyHyperlink}"/>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.RemoveHyperlinkCommand" Header="{Binding ContextMenuRemoveHyperlink}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/RemoveHyperlink_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.ShowFontDialogCommand" Header="{Binding ContextMenuDialog}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Font_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.ShowParagraphDialogCommand" Header="{Binding ContextMenuParagraphDialog}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Paragraph_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem Header="{Binding ContextMenuInsertTable}" Visibility="Collapsed">
                                            <MenuItem CommandParameter="Left" Command="syncfusion:SfRichTextBoxAdv.InsertColumnCommand" Header="{Binding ContextMenuInsertLeftColumn}">
                                                <MenuItem.Icon>
                                                    <Image>
                                                        <Image.Source>
                                                            <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertColumnBefore_Icon.png"/>
                                                        </Image.Source>
                                                    </Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem CommandParameter="Right" Command="syncfusion:SfRichTextBoxAdv.InsertColumnCommand" Header="{Binding ContextMenuInsertRightColumn}">
                                                <MenuItem.Icon>
                                                    <Image>
                                                        <Image.Source>
                                                            <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertColumnAfter_Icon.png"/>
                                                        </Image.Source>
                                                    </Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem CommandParameter="Above" Command="syncfusion:SfRichTextBoxAdv.InsertRowCommand" Header="{Binding ContextMenuInsertRowAbove}">
                                                <MenuItem.Icon>
                                                    <Image>
                                                        <Image.Source>
                                                            <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertRowBefore_Icon.png"/>
                                                        </Image.Source>
                                                    </Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem CommandParameter="Below" Command="syncfusion:SfRichTextBoxAdv.InsertRowCommand" Header="{Binding ContextMenuInsertRowBelow}">
                                                <MenuItem.Icon>
                                                    <Image>
                                                        <Image.Source>
                                                            <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/InsertRowAfter_Icon.png"/>
                                                        </Image.Source>
                                                    </Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </MenuItem>
                                        <MenuItem Header="{Binding ContextMenuAutoFit}" Visibility="Collapsed">
                                            <MenuItem CommandParameter="FitToContents" Command="syncfusion:SfRichTextBoxAdv.AutoFitTableCommand" Header="{Binding ContextMenuAutoFitToContents}">
                                                <MenuItem.Icon>
                                                    <Image>
                                                        <Image.Source>
                                                            <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/FitToContents_Icon.png"/>
                                                        </Image.Source>
                                                    </Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem CommandParameter="FitToWindow" Command="syncfusion:SfRichTextBoxAdv.AutoFitTableCommand" Header="{Binding ContextMenuAutoFitToWindow}">
                                                <MenuItem.Icon>
                                                    <Image>
                                                        <Image.Source>
                                                            <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/FitToWindow_Icon.png"/>
                                                        </Image.Source>
                                                    </Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem CommandParameter="FixedColumnWidth" Command="syncfusion:SfRichTextBoxAdv.AutoFitTableCommand" Header="{Binding ContextMenuFixedColumnWidth}">
                                                <MenuItem.Icon>
                                                    <Image>
                                                        <Image.Source>
                                                            <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/FixedColumnWidth_Icon.png"/>
                                                        </Image.Source>
                                                    </Image>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </MenuItem>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.MergeSelectedCellsCommand" Header="{Binding ContextMenuMergeCell}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/MergeCells_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.ShowTableDialogCommand" Header="{Binding ContextMenuTableProperties}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/TableProperties_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem CommandParameter="Hyperlink" Command="syncfusion:SfRichTextBoxAdv.ShowHyperlinkDialogCommand" Header="{Binding ContextMenuHyperlink}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Hyperlink_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.NewCommentCommand" Header="{Binding ContextMenuComment}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Comment_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Command="syncfusion:SfRichTextBoxAdv.DeleteCommentCommand" Header="{Binding ContextMenuDeleteComment}">
                                            <MenuItem.Icon>
                                                <Image>
                                                    <Image.Source>
                                                        <BitmapImage UriSource="pack://application:,,,/Syncfusion.SfRichTextBoxAdv.WPF;component/Images/Comment_Icon.png"/>
                                                    </Image.Source>
                                                </Image>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type syncfusion:SfRichTextBoxAdv}">
                                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                            <Grid>
                                                <Grid.Resources>
                                                    <Style x:Key="PaneCloseButtonStyle" TargetType="{x:Type Button}">
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="ToolTip" Value="{Binding OptionPaneCloseButtonToolTip}"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type Button}">
                                                                    <Grid>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="4"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition Width="4"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Grid.RowDefinitions>
                                                                            <RowDefinition Height="5"/>
                                                                            <RowDefinition Height="2*"/>
                                                                            <RowDefinition Height="5"/>
                                                                        </Grid.RowDefinitions>
                                                                        <Path x:Name="pathFill" Grid.Column="1" Data="F1M306,369.225L15.3,74.7 0,90 0,120.401 279.225,396 0,671.599 0,702 15.3,717.3 306,422.775 596.7,717.3 612,702 612,671.599 332.775,396 612,120.401 612,90 596.7,74.7z" Fill="#FF333333" Height="16" Grid.Row="1" Stretch="Fill" Width="16"/>
                                                                        <Rectangle x:Name="border" Grid.ColumnSpan="3" Grid.Column="0" Fill="#FF333333" Grid.Row="0" Grid.RowSpan="3"/>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsEnabled" Value="True">
                                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Fill" TargetName="pathFill" Value="#FF6BA5C6"/>
                                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsPressed" Value="True">
                                                                            <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Grid.Resources>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid x:Name="OptionsPane" Background="White" Visibility="Collapsed" Width="280">
                                                    <Grid.Resources>
                                                        <Style x:Key="SearchResultItemStyle" TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="Padding" Value="6,3"/>
                                                            <Setter Property="FontFamily" Value="Segoe UI"/>
                                                            <Setter Property="FontSize" Value="12"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                            <Setter Property="Background" Value="White"/>
                                                            <Setter Property="Foreground" Value="#FF333333"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <Grid Background="{TemplateBinding Background}">
                                                                            <Grid>
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                    <RowDefinition Height="Auto"/>
                                                                                </Grid.RowDefinitions>
                                                                                <Border x:Name="SelectedBorder" BorderBrush="#FF959595" BorderThickness="2" Opacity="0"/>
                                                                                <Border x:Name="ItemBorder" BorderBrush="#FF959595" BorderThickness="1" Opacity="0"/>
                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                                                                                <Rectangle Fill="#FF666666" Height="1" Margin="0,4" Opacity="0.2" Grid.Row="1"/>
                                                                            </Grid>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                                    <Condition Property="IsSelected" Value="False"/>
                                                                                </MultiTrigger.Conditions>
                                                                                <Setter Property="Opacity" TargetName="ItemBorder" Value="1"/>
                                                                            </MultiTrigger>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                                </MultiTrigger.Conditions>
                                                                                <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                                            </MultiTrigger>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                                </MultiTrigger.Conditions>
                                                                                <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                                            </MultiTrigger>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                                </MultiTrigger.Conditions>
                                                                                <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                                            </MultiTrigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                        <Style x:Key="SearchResultsListBoxStyle" TargetType="{x:Type ListBox}">
                                                            <Setter Property="Padding" Value="1"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                            <Setter Property="Foreground" Value="#FF333333"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                                            <Setter Property="ItemContainerStyle">
                                                                <Setter.Value>
                                                                    <Style TargetType="{x:Type ListBoxItem}">
                                                                        <Setter Property="Padding" Value="6,3"/>
                                                                        <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                        <Setter Property="FontSize" Value="12"/>
                                                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                                        <Setter Property="Background" Value="White"/>
                                                                        <Setter Property="Foreground" Value="#FF333333"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                    <Grid Background="{TemplateBinding Background}">
                                                                                        <Grid>
                                                                                            <Grid.RowDefinitions>
                                                                                                <RowDefinition Height="Auto"/>
                                                                                                <RowDefinition Height="Auto"/>
                                                                                            </Grid.RowDefinitions>
                                                                                            <Border x:Name="SelectedBorder" BorderBrush="#FF959595" BorderThickness="2" Opacity="0"/>
                                                                                            <Border x:Name="ItemBorder" BorderBrush="#FF959595" BorderThickness="1" Opacity="0"/>
                                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                                                                                            <Rectangle Fill="#FF666666" Height="1" Margin="0,4" Opacity="0.2" Grid.Row="1"/>
                                                                                        </Grid>
                                                                                    </Grid>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <MultiTrigger>
                                                                                            <MultiTrigger.Conditions>
                                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                                                <Condition Property="IsSelected" Value="False"/>
                                                                                            </MultiTrigger.Conditions>
                                                                                            <Setter Property="Opacity" TargetName="ItemBorder" Value="1"/>
                                                                                        </MultiTrigger>
                                                                                        <MultiTrigger>
                                                                                            <MultiTrigger.Conditions>
                                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                                                <Condition Property="IsSelected" Value="True"/>
                                                                                            </MultiTrigger.Conditions>
                                                                                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                                                        </MultiTrigger>
                                                                                        <MultiTrigger>
                                                                                            <MultiTrigger.Conditions>
                                                                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                                                                <Condition Property="IsSelected" Value="True"/>
                                                                                            </MultiTrigger.Conditions>
                                                                                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                                                        </MultiTrigger>
                                                                                        <MultiTrigger>
                                                                                            <MultiTrigger.Conditions>
                                                                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                                                                <Condition Property="IsSelected" Value="True"/>
                                                                                            </MultiTrigger.Conditions>
                                                                                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                                                        </MultiTrigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                                                        <Grid>
                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                                                                                <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                                                    <Grid>
                                                                                        <Grid.ColumnDefinitions>
                                                                                            <ColumnDefinition Width="*"/>
                                                                                            <ColumnDefinition Width="20"/>
                                                                                        </Grid.ColumnDefinitions>
                                                                                        <ItemsPresenter/>
                                                                                    </Grid>
                                                                                </ScrollViewer>
                                                                            </Border>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                        <Style x:Key="NavigateNextButtonStyle" TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="1"/>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="1"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="2"/>
                                                                                <RowDefinition Height="2*"/>
                                                                                <RowDefinition Height="2"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Path x:Name="pathFill" Grid.Column="1" Data="F1M512.55,327.15L340.425,151.2C332.775,143.55,321.3,143.55,313.65,151.2L137.7,327.15 164.475,353.925 306,212.4 306,663.75 344.25,663.75 344.25,212.4 485.775,353.925z" Fill="#FF333333" Grid.Row="1" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" Width="12">
                                                                                <Path.RenderTransform>
                                                                                    <RotateTransform Angle="180"/>
                                                                                </Path.RenderTransform>
                                                                            </Path>
                                                                            <Rectangle x:Name="border" Grid.ColumnSpan="3" Grid.Column="0" Fill="#FF333333" Grid.Row="0" Grid.RowSpan="3"/>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsEnabled" Value="True">
                                                                                <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                <Setter Property="Fill" TargetName="pathFill" Value="#FF6BA5C6"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                <Setter Property="Fill" TargetName="pathFill" Value="#FF0071BC"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                        <Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}">
                                                            <Setter Property="Foreground" Value="#FF333333"/>
                                                            <Setter Property="Background" Value="White"/>
                                                            <Setter Property="BorderBrush" Value="#FFA5A5A5"/>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="FontFamily" Value="Segoe UI"/>
                                                            <Setter Property="FontSize" Value="12"/>
                                                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                                                            <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
                                                            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                                                            <Setter Property="Padding" Value="3,6"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="30"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                                                                            <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                                                                            <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" IsTabStop="False" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"/>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                        <Style x:Key="SearchResultTextBoxStyle" TargetType="{x:Type TextBox}">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Foreground" Value="#FF666666"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                            <Setter Property="AllowDrop" Value="True"/>
                                                            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                            <Setter Property="FontFamily" Value="Segoe UI"/>
                                                            <Setter Property="FontSize" Value="12"/>
                                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                                                            <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
                                                            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                                                            <Setter Property="Padding" Value="0,6"/>
                                                            <Setter Property="MinHeight" Value="30"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="30"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                                                                            <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                                                                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                        <Style x:Key="SearchButtonStyle" TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="White"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="7.25"/>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="7.25"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="6"/>
                                                                                <RowDefinition Height="*"/>
                                                                                <RowDefinition Height="6"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Path x:Name="white" Grid.Column="1" Data="F1M401.625,472.5C306,472.5 229.5,396 229.5,300.375 229.5,204.75 306,128.25 401.625,128.25 497.25,128.25 573.75,204.75 573.75,300.375 573.75,396 497.25,472.5 401.625,472.5 M401.625,90C286.875,90 191.25,185.625 191.25,300.375 191.25,346.275 206.55,384.525 229.5,418.95L19.125,629.325C7.64999999999998,640.8,7.64999999999998,656.1,19.125,663.75L38.25,682.875C49.725,694.35,65.025,694.35,72.675,682.875L283.05,472.5C317.475,495.45 359.55,510.75 401.625,510.75 516.375,510.75 612,415.125 612,300.375 612,185.625 516.375,90 401.625,90" Fill="#FF333333" Height="16" Grid.Row="1" Stretch="Fill" Width="16"/>
                                                                            <Rectangle x:Name="border" Grid.ColumnSpan="3" Grid.Column="0" Fill="#FF333333" Grid.Row="0" Grid.RowSpan="3" Panel.ZIndex="-1"/>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsEnabled" Value="True">
                                                                                <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Opacity" TargetName="border" Value="0.1"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Opacity" TargetName="border" Value="0.16"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                        <Style x:Key="NavigatePreviousButtonStyle" TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <Grid>
                                                                            <Grid.ColumnDefinitions>
                                                                                <ColumnDefinition Width="1"/>
                                                                                <ColumnDefinition Width="*"/>
                                                                                <ColumnDefinition Width="1"/>
                                                                            </Grid.ColumnDefinitions>
                                                                            <Grid.RowDefinitions>
                                                                                <RowDefinition Height="2"/>
                                                                                <RowDefinition Height="2*"/>
                                                                                <RowDefinition Height="2"/>
                                                                            </Grid.RowDefinitions>
                                                                            <Path x:Name="pathFill" Grid.Column="1" Data="F1M512.55,327.15L340.425,151.2C332.775,143.55,321.3,143.55,313.65,151.2L137.7,327.15 164.475,353.925 306,212.4 306,663.75 344.25,663.75 344.25,212.4 485.775,353.925z" Fill="#FF333333" Grid.Row="1" Stretch="Uniform" Width="12"/>
                                                                            <Rectangle x:Name="border" Grid.ColumnSpan="3" Grid.Column="0" Fill="#FF333333" Grid.Row="0" Grid.RowSpan="3"/>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsEnabled" Value="True">
                                                                                <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                <Setter Property="Fill" TargetName="pathFill" Value="#FF6BA5C6"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                <Setter Property="Fill" TargetName="pathFill" Value="#FF0071BC"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Grid.Resources>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="26"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="26"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="20"/>
                                                        <RowDefinition Height="30"/>
                                                        <RowDefinition Height="12"/>
                                                        <RowDefinition Height="34"/>
                                                        <RowDefinition Height="12"/>
                                                        <RowDefinition Height="18"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="8"/>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="20"/>
                                                    </Grid.RowDefinitions>
                                                    <Rectangle Grid.Column="2" Fill="#FF606060" HorizontalAlignment="Right" Opacity="0.5" Grid.RowSpan="10" Width="2"/>
                                                    <TextBlock x:Name="PaneHeaderBlock" Grid.Column="1" Foreground="#FF0071BC" FontSize="18" FontFamily="Segoe UI" HorizontalAlignment="Stretch" Grid.Row="1" Text="{Binding OptionsPaneSearch}" VerticalAlignment="Center"><Run Text="Search"/></TextBlock>
                                                    <Button x:Name="ClosePaneButton" Grid.ColumnSpan="2" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,20,0" Grid.Row="1">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="ToolTip" Value="{Binding OptionPaneCloseButtonToolTip}"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="4"/>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                    <ColumnDefinition Width="4"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition Height="5"/>
                                                                                    <RowDefinition Height="2*"/>
                                                                                    <RowDefinition Height="5"/>
                                                                                </Grid.RowDefinitions>
                                                                                <Path x:Name="pathFill" Grid.Column="1" Data="F1M306,369.225L15.3,74.7 0,90 0,120.401 279.225,396 0,671.599 0,702 15.3,717.3 306,422.775 596.7,717.3 612,702 612,671.599 332.775,396 612,120.401 612,90 596.7,74.7z" Fill="#FF333333" Height="16" Grid.Row="1" Stretch="Fill" Width="16"/>
                                                                                <Rectangle x:Name="border" Grid.ColumnSpan="3" Grid.Column="0" Fill="#FF333333" Grid.Row="0" Grid.RowSpan="3"/>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                    <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Fill" TargetName="pathFill" Value="#FF6BA5C6"/>
                                                                                    <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                    <Grid Grid.Column="1" Grid.Row="3">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="5*"/>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBox x:Name="SearchTextBox" Grid.ColumnSpan="3" MinHeight="32">
                                                            <TextBox.Style>
                                                                <Style TargetType="{x:Type TextBox}">
                                                                    <Setter Property="Foreground" Value="#FF333333"/>
                                                                    <Setter Property="Background" Value="White"/>
                                                                    <Setter Property="BorderBrush" Value="#FFA5A5A5"/>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                    <Setter Property="FontSize" Value="12"/>
                                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                                    <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                                                                    <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
                                                                    <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                                                                    <Setter Property="Padding" Value="3,6"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="*"/>
                                                                                        <ColumnDefinition Width="30"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                                                                                    <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                                                                                    <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}" IsTabStop="False" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}"/>
                                                                                </Grid>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                        <Button x:Name="SearchButton" Grid.Column="2" ToolTip="{Binding SearchButtonToolTip}">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type Button}">
                                                                    <Setter Property="Background" Value="White"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="7.25"/>
                                                                                        <ColumnDefinition Width="*"/>
                                                                                        <ColumnDefinition Width="7.25"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition Height="6"/>
                                                                                        <RowDefinition Height="*"/>
                                                                                        <RowDefinition Height="6"/>
                                                                                    </Grid.RowDefinitions>
                                                                                    <Path x:Name="white" Grid.Column="1" Data="F1M401.625,472.5C306,472.5 229.5,396 229.5,300.375 229.5,204.75 306,128.25 401.625,128.25 497.25,128.25 573.75,204.75 573.75,300.375 573.75,396 497.25,472.5 401.625,472.5 M401.625,90C286.875,90 191.25,185.625 191.25,300.375 191.25,346.275 206.55,384.525 229.5,418.95L19.125,629.325C7.64999999999998,640.8,7.64999999999998,656.1,19.125,663.75L38.25,682.875C49.725,694.35,65.025,694.35,72.675,682.875L283.05,472.5C317.475,495.45 359.55,510.75 401.625,510.75 516.375,510.75 612,415.125 612,300.375 612,185.625 516.375,90 401.625,90" Fill="#FF333333" Height="16" Grid.Row="1" Stretch="Fill" Width="16"/>
                                                                                    <Rectangle x:Name="border" Grid.ColumnSpan="3" Grid.Column="0" Fill="#FF333333" Grid.Row="0" Grid.RowSpan="3" Panel.ZIndex="-1"/>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                        <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Opacity" TargetName="border" Value="0.1"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Opacity" TargetName="border" Value="0.16"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                    </Grid>
                                                    <Grid Grid.Column="1" Grid.Row="5">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="12"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0" Foreground="#FF333333" FontSize="14" FontFamily="Segoe UI" HorizontalAlignment="Stretch" Text="{Binding OptionsPaneResultsHeader}" VerticalAlignment="Center"><Run Text="RESULTS"/></TextBlock>
                                                        <Button x:Name="NavigatePreviousResultButton" Grid.Column="1" Visibility="Collapsed">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type Button}">
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="1"/>
                                                                                        <ColumnDefinition Width="*"/>
                                                                                        <ColumnDefinition Width="1"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition Height="2"/>
                                                                                        <RowDefinition Height="2*"/>
                                                                                        <RowDefinition Height="2"/>
                                                                                    </Grid.RowDefinitions>
                                                                                    <Path x:Name="pathFill" Grid.Column="1" Data="F1M512.55,327.15L340.425,151.2C332.775,143.55,321.3,143.55,313.65,151.2L137.7,327.15 164.475,353.925 306,212.4 306,663.75 344.25,663.75 344.25,212.4 485.775,353.925z" Fill="#FF333333" Grid.Row="1" Stretch="Uniform" Width="12"/>
                                                                                    <Rectangle x:Name="border" Grid.ColumnSpan="3" Grid.Column="0" Fill="#FF333333" Grid.Row="0" Grid.RowSpan="3"/>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                        <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                        <Setter Property="Fill" TargetName="pathFill" Value="#FF6BA5C6"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                        <Setter Property="Fill" TargetName="pathFill" Value="#FF0071BC"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                        <Button x:Name="NavigateNextResultButton" Grid.Column="3" Visibility="Collapsed">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type Button}">
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <Grid>
                                                                                    <Grid.ColumnDefinitions>
                                                                                        <ColumnDefinition Width="1"/>
                                                                                        <ColumnDefinition Width="*"/>
                                                                                        <ColumnDefinition Width="1"/>
                                                                                    </Grid.ColumnDefinitions>
                                                                                    <Grid.RowDefinitions>
                                                                                        <RowDefinition Height="2"/>
                                                                                        <RowDefinition Height="2*"/>
                                                                                        <RowDefinition Height="2"/>
                                                                                    </Grid.RowDefinitions>
                                                                                    <Path x:Name="pathFill" Grid.Column="1" Data="F1M512.55,327.15L340.425,151.2C332.775,143.55,321.3,143.55,313.65,151.2L137.7,327.15 164.475,353.925 306,212.4 306,663.75 344.25,663.75 344.25,212.4 485.775,353.925z" Fill="#FF333333" Grid.Row="1" RenderTransformOrigin="0.5,0.5" Stretch="Uniform" Width="12">
                                                                                        <Path.RenderTransform>
                                                                                            <RotateTransform Angle="180"/>
                                                                                        </Path.RenderTransform>
                                                                                    </Path>
                                                                                    <Rectangle x:Name="border" Grid.ColumnSpan="3" Grid.Column="0" Fill="#FF333333" Grid.Row="0" Grid.RowSpan="3"/>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsEnabled" Value="True">
                                                                                        <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                        <Setter Property="Fill" TargetName="pathFill" Value="#FF6BA5C6"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                        <Setter Property="Fill" TargetName="pathFill" Value="#FF0071BC"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                    </Grid>
                                                    <TextBox x:Name="SearchResultsCountTextBox" Grid.Column="1" HorizontalAlignment="Left" IsReadOnly="True" IsEnabled="False" Margin="-2,0,0,0" Grid.Row="6" Visibility="Collapsed" VerticalAlignment="Top" VerticalContentAlignment="Top">
                                                        <TextBox.Style>
                                                            <Style TargetType="{x:Type TextBox}">
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Foreground" Value="#FF666666"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                <Setter Property="AllowDrop" Value="True"/>
                                                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                                <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                <Setter Property="FontSize" Value="12"/>
                                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                                                                <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
                                                                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                                                                <Setter Property="Padding" Value="0,6"/>
                                                                <Setter Property="MinHeight" Value="30"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                    <ColumnDefinition Width="30"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                                                                                <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                                                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                    <TextBox x:Name="SearchResultsTextBox" Grid.Column="1" HorizontalAlignment="Stretch" IsEnabled="False" Margin="-2,0,0,0" Padding="0" Grid.Row="8" TextWrapping="Wrap" Text="{Binding OptionsPaneDescription, Mode=OneWay}" VerticalAlignment="Top">
                                                        <TextBox.Style>
                                                            <Style TargetType="{x:Type TextBox}">
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="Foreground" Value="#FF666666"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                                <Setter Property="AllowDrop" Value="True"/>
                                                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                                <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                <Setter Property="FontSize" Value="12"/>
                                                                <Setter Property="HorizontalAlignment" Value="Left"/>
                                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                                <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
                                                                <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
                                                                <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
                                                                <Setter Property="Padding" Value="0,6"/>
                                                                <Setter Property="MinHeight" Value="30"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                    <ColumnDefinition Width="30"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
                                                                                <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
                                                                                <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                    <ListBox x:Name="SearchResultsListBox" Grid.Column="1" Margin="-4,0,0,0" Grid.Row="8" SelectionMode="Single" Visibility="Collapsed">
                                                        <ListBox.Style>
                                                            <Style TargetType="{x:Type ListBox}">
                                                                <Setter Property="Padding" Value="1"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="Foreground" Value="#FF333333"/>
                                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                                <Setter Property="IsTabStop" Value="False"/>
                                                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                                                <Setter Property="ItemContainerStyle">
                                                                    <Setter.Value>
                                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                                            <Setter Property="Padding" Value="6,3"/>
                                                                            <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                            <Setter Property="FontSize" Value="12"/>
                                                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                                            <Setter Property="Background" Value="White"/>
                                                                            <Setter Property="Foreground" Value="#FF333333"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                        <Grid Background="{TemplateBinding Background}">
                                                                                            <Grid>
                                                                                                <Grid.RowDefinitions>
                                                                                                    <RowDefinition Height="Auto"/>
                                                                                                    <RowDefinition Height="Auto"/>
                                                                                                </Grid.RowDefinitions>
                                                                                                <Border x:Name="SelectedBorder" BorderBrush="#FF959595" BorderThickness="2" Opacity="0"/>
                                                                                                <Border x:Name="ItemBorder" BorderBrush="#FF959595" BorderThickness="1" Opacity="0"/>
                                                                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                                                                                                <Rectangle Fill="#FF666666" Height="1" Margin="0,4" Opacity="0.2" Grid.Row="1"/>
                                                                                            </Grid>
                                                                                        </Grid>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <MultiTrigger>
                                                                                                <MultiTrigger.Conditions>
                                                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                                                    <Condition Property="IsSelected" Value="False"/>
                                                                                                </MultiTrigger.Conditions>
                                                                                                <Setter Property="Opacity" TargetName="ItemBorder" Value="1"/>
                                                                                            </MultiTrigger>
                                                                                            <MultiTrigger>
                                                                                                <MultiTrigger.Conditions>
                                                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                                                </MultiTrigger.Conditions>
                                                                                                <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                                                            </MultiTrigger>
                                                                                            <MultiTrigger>
                                                                                                <MultiTrigger.Conditions>
                                                                                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                                                </MultiTrigger.Conditions>
                                                                                                <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                                                            </MultiTrigger>
                                                                                            <MultiTrigger>
                                                                                                <MultiTrigger.Conditions>
                                                                                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                                                </MultiTrigger.Conditions>
                                                                                                <Setter Property="Opacity" TargetName="SelectedBorder" Value="1"/>
                                                                                            </MultiTrigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ListBox}">
                                                                            <Grid>
                                                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                                                                                    <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                                                        <Grid>
                                                                                            <Grid.ColumnDefinitions>
                                                                                                <ColumnDefinition Width="*"/>
                                                                                                <ColumnDefinition Width="20"/>
                                                                                            </Grid.ColumnDefinitions>
                                                                                            <ItemsPresenter/>
                                                                                        </Grid>
                                                                                    </ScrollViewer>
                                                                                </Border>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ListBox.Style>
                                                    </ListBox>
                                                </Grid>
                                                <Grid Grid.Column="1">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="*"/>
                                                        <RowDefinition Height="Auto"/>
                                                    </Grid.RowDefinitions>
                                                    <ContentControl x:Name="content"
                                                                Grid.Column="0" Grid.Row="0" 
                                                                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
                                                                Background="{Binding Color, ElementName=NoteFontHighlight, Mode=OneWay}"
                                                                Style="{DynamicResource NotebookContentDisplay}">
                                                        <ContentControl.Resources>
                                                            <Style x:Key="NotebookContentDisplay" TargetType="{x:Type ContentControl}">
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ContentControl}">

                                                                            <ContentPresenter ScrollViewer.CanContentScroll="False"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ContentControl.Resources>
                                                    </ContentControl>
                                                    <ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="16" IsTabStop="False" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="Collapsed"/>
                                                    <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Minimum="0" Orientation="Vertical" Grid.Row="0" Visibility="Collapsed" Width="16"/>
                                                </Grid>
                                                <Grid x:Name="SpellingPane" Background="White" Grid.Column="2" SnapsToDevicePixels="False" Visibility="Collapsed" Width="300">
                                                    <Grid.Resources>
                                                        <Style x:Key="SpellingSuggestionListBoxStyle" TargetType="{x:Type ListBox}">
                                                            <Setter Property="Foreground" Value="#FF333333"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                            <Setter Property="IsTabStop" Value="True"/>
                                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                                            <Setter Property="ItemContainerStyle">
                                                                <Setter.Value>
                                                                    <Style TargetType="{x:Type ListBoxItem}">
                                                                        <Setter Property="Padding" Value="6,3"/>
                                                                        <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                        <Setter Property="FontSize" Value="14"/>
                                                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                        <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                                        <Setter Property="Height" Value="30"/>
                                                                        <Setter Property="Template">
                                                                            <Setter.Value>
                                                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="False">
                                                                                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                                                                                    </Grid>
                                                                                    <ControlTemplate.Triggers>
                                                                                        <MultiTrigger>
                                                                                            <MultiTrigger.Conditions>
                                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                                                <Condition Property="IsSelected" Value="False"/>
                                                                                            </MultiTrigger.Conditions>
                                                                                            <Setter Property="Background" Value="#FFD5E1F2"/>
                                                                                        </MultiTrigger>
                                                                                        <MultiTrigger>
                                                                                            <MultiTrigger.Conditions>
                                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                                                <Condition Property="IsSelected" Value="True"/>
                                                                                            </MultiTrigger.Conditions>
                                                                                            <Setter Property="Background" Value="#FFCBCFE5"/>
                                                                                        </MultiTrigger>
                                                                                        <Trigger Property="IsSelected" Value="True">
                                                                                            <Setter Property="Background" Value="#FFCBCFE5"/>
                                                                                        </Trigger>
                                                                                    </ControlTemplate.Triggers>
                                                                                </ControlTemplate>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Style>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBox}">
                                                                        <Grid SnapsToDevicePixels="False">
                                                                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                                                <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                                                    <Grid>
                                                                                        <ItemsPresenter/>
                                                                                    </Grid>
                                                                                </ScrollViewer>
                                                                            </Border>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                        <Style x:Key="SpellingPaneButtonStyle" TargetType="{x:Type Button}">
                                                            <Setter Property="Background" Value="#FFF7F7F7"/>
                                                            <Setter Property="Foreground" Value="#FF333333"/>
                                                            <Setter Property="FontWeight" Value="Normal"/>
                                                            <Setter Property="BorderBrush" Value="#FF606060"/>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="Padding" Value="10,1"/>
                                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                            <Setter Property="FontFamily" Value="Segoe UI"/>
                                                            <Setter Property="FontSize" Value="14"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                                        <Grid>
                                                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                            </Border>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF569DE5"/>
                                                                                <Setter Property="Background" Value="#FFE5F0FC"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsPressed" Value="True">
                                                                                <Setter Property="Background" Value="#FF0071BC"/>
                                                                                <Setter Property="Foreground" Value="White"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Foreground" Value="#FFA5A5A5"/>
                                                                                <Setter Property="Background" Value="White"/>
                                                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FFA5A5A5"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                        <Style x:Key="SpellingSuggestionItemStyle" TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="Padding" Value="6,3"/>
                                                            <Setter Property="FontFamily" Value="Segoe UI"/>
                                                            <Setter Property="FontSize" Value="14"/>
                                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                            <Setter Property="Height" Value="30"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="False">
                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                                                                        </Grid>
                                                                        <ControlTemplate.Triggers>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                                    <Condition Property="IsSelected" Value="False"/>
                                                                                </MultiTrigger.Conditions>
                                                                                <Setter Property="Background" Value="#FFD5E1F2"/>
                                                                            </MultiTrigger>
                                                                            <MultiTrigger>
                                                                                <MultiTrigger.Conditions>
                                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                                </MultiTrigger.Conditions>
                                                                                <Setter Property="Background" Value="#FFCBCFE5"/>
                                                                            </MultiTrigger>
                                                                            <Trigger Property="IsSelected" Value="True">
                                                                                <Setter Property="Background" Value="#FFCBCFE5"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Grid.Resources>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="13"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="13"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="41"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="27"/>
                                                        <RowDefinition Height="25"/>
                                                        <RowDefinition Height="17"/>
                                                        <RowDefinition Height="25"/>
                                                        <RowDefinition Height="15"/>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="15"/>
                                                        <RowDefinition Height="25"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock x:Name="SpellingPaneHeaderBlock" Grid.Column="1" Foreground="#FF0071BC" FontSize="20" FontFamily="Segoe UI" HorizontalAlignment="Stretch" Grid.Row="0" Text="{Binding SpellingPaneSpelling}" VerticalAlignment="Center"><Run Text="Spelling"/></TextBlock>
                                                    <Button x:Name="SpellingPaneCloseButton" Grid.Column="1" HorizontalAlignment="Right" Grid.Row="0" VerticalAlignment="Center">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="ToolTip" Value="{Binding OptionPaneCloseButtonToolTip}"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Grid>
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="4"/>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                    <ColumnDefinition Width="4"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <Grid.RowDefinitions>
                                                                                    <RowDefinition Height="5"/>
                                                                                    <RowDefinition Height="2*"/>
                                                                                    <RowDefinition Height="5"/>
                                                                                </Grid.RowDefinitions>
                                                                                <Path x:Name="pathFill" Grid.Column="1" Data="F1M306,369.225L15.3,74.7 0,90 0,120.401 279.225,396 0,671.599 0,702 15.3,717.3 306,422.775 596.7,717.3 612,702 612,671.599 332.775,396 612,120.401 612,90 596.7,74.7z" Fill="#FF333333" Height="16" Grid.Row="1" Stretch="Fill" Width="16"/>
                                                                                <Rectangle x:Name="border" Grid.ColumnSpan="3" Grid.Column="0" Fill="#FF333333" Grid.Row="0" Grid.RowSpan="3"/>
                                                                            </Grid>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsEnabled" Value="True">
                                                                                    <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Fill" TargetName="pathFill" Value="#FF6BA5C6"/>
                                                                                    <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Opacity" TargetName="border" Value="0"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                    <Separator Grid.Column="1" IsEnabled="False" Opacity="0.5" Grid.Row="1" VerticalAlignment="Bottom"/>
                                                    <TextBlock x:Name="SpellingPaneMisspelledWordBlock" Grid.Column="1" Foreground="#FF0071BC" FontWeight="SemiBold" FontSize="14" FontFamily="Segoe UI" HorizontalAlignment="Stretch" Margin="0" Grid.Row="3" VerticalAlignment="Center"/>
                                                    <Grid Grid.Column="1" Grid.Row="5">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Button x:Name="SpellingPaneResumeButton" Content="{Binding SpellingPaneResume}" Visibility="Collapsed">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type Button}">
                                                                    <Setter Property="Background" Value="#FFF7F7F7"/>
                                                                    <Setter Property="Foreground" Value="#FF333333"/>
                                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                                    <Setter Property="BorderBrush" Value="#FF606060"/>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="Padding" Value="10,1"/>
                                                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                                    <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                    <Setter Property="FontSize" Value="14"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <Grid>
                                                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                    </Border>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FF569DE5"/>
                                                                                        <Setter Property="Background" Value="#FFE5F0FC"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" Value="#FF0071BC"/>
                                                                                        <Setter Property="Foreground" Value="White"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Foreground" Value="#FFA5A5A5"/>
                                                                                        <Setter Property="Background" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FFA5A5A5"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                        <Button x:Name="SpellingPaneIgnoreAllButton" Content="{Binding SpellingPaneIgnoreAll}" Grid.Column="1" CommandParameter="{Binding Text, ElementName=SpellingPaneMisspelledWordBlock}" Command="syncfusion:SfRichTextBoxAdv.IgnoreAllSpellingErrorsCommand" Margin="0">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type Button}">
                                                                    <Setter Property="Background" Value="#FFF7F7F7"/>
                                                                    <Setter Property="Foreground" Value="#FF333333"/>
                                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                                    <Setter Property="BorderBrush" Value="#FF606060"/>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="Padding" Value="10,1"/>
                                                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                                    <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                    <Setter Property="FontSize" Value="14"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <Grid>
                                                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                    </Border>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FF569DE5"/>
                                                                                        <Setter Property="Background" Value="#FFE5F0FC"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" Value="#FF0071BC"/>
                                                                                        <Setter Property="Foreground" Value="White"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Foreground" Value="#FFA5A5A5"/>
                                                                                        <Setter Property="Background" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FFA5A5A5"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                        <Button x:Name="SpellingPaneAddToDictionaryButton" Content="{Binding SpellingPaneAddToDictionary}" Grid.Column="2" CommandParameter="{Binding Text, ElementName=SpellingPaneMisspelledWordBlock}" Command="syncfusion:SfRichTextBoxAdv.AddToDictionaryCommand" Margin="15,0,0,0">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type Button}">
                                                                    <Setter Property="Background" Value="#FFF7F7F7"/>
                                                                    <Setter Property="Foreground" Value="#FF333333"/>
                                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                                    <Setter Property="BorderBrush" Value="#FF606060"/>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="Padding" Value="10,1"/>
                                                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                                    <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                    <Setter Property="FontSize" Value="14"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <Grid>
                                                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                    </Border>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FF569DE5"/>
                                                                                        <Setter Property="Background" Value="#FFE5F0FC"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" Value="#FF0071BC"/>
                                                                                        <Setter Property="Foreground" Value="White"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Foreground" Value="#FFA5A5A5"/>
                                                                                        <Setter Property="Background" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FFA5A5A5"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                    </Grid>
                                                    <ListBox x:Name="SpellingPaneSuggestionListBox" Grid.Column="1" Height="152" Grid.Row="7" SelectionMode="Single">
                                                        <ListBox.Style>
                                                            <Style TargetType="{x:Type ListBox}">
                                                                <Setter Property="Foreground" Value="#FF333333"/>
                                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                                <Setter Property="IsTabStop" Value="True"/>
                                                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                                                <Setter Property="ItemContainerStyle">
                                                                    <Setter.Value>
                                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                                            <Setter Property="Padding" Value="6,3"/>
                                                                            <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                            <Setter Property="FontSize" Value="14"/>
                                                                            <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                                            <Setter Property="VerticalContentAlignment" Value="Top"/>
                                                                            <Setter Property="Height" Value="30"/>
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="False">
                                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center"/>
                                                                                        </Grid>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <MultiTrigger>
                                                                                                <MultiTrigger.Conditions>
                                                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                                                    <Condition Property="IsSelected" Value="False"/>
                                                                                                </MultiTrigger.Conditions>
                                                                                                <Setter Property="Background" Value="#FFD5E1F2"/>
                                                                                            </MultiTrigger>
                                                                                            <MultiTrigger>
                                                                                                <MultiTrigger.Conditions>
                                                                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                                                                    <Condition Property="IsSelected" Value="True"/>
                                                                                                </MultiTrigger.Conditions>
                                                                                                <Setter Property="Background" Value="#FFCBCFE5"/>
                                                                                            </MultiTrigger>
                                                                                            <Trigger Property="IsSelected" Value="True">
                                                                                                <Setter Property="Background" Value="#FFCBCFE5"/>
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type ListBox}">
                                                                            <Grid SnapsToDevicePixels="False">
                                                                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                                                                    <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                                                                        <Grid>
                                                                                            <ItemsPresenter/>
                                                                                        </Grid>
                                                                                    </ScrollViewer>
                                                                                </Border>
                                                                            </Grid>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </ListBox.Style>
                                                    </ListBox>
                                                    <Grid Grid.Column="1" Grid.Row="9">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Button x:Name="SpellingPaneChangeButton" Content="{Binding SpellingPaneChange}" CommandParameter="{Binding SelectedValue, ElementName=SpellingPaneSuggestionListBox}" Command="syncfusion:SfRichTextBoxAdv.ChangeSpellingCommand">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type Button}">
                                                                    <Setter Property="Background" Value="#FFF7F7F7"/>
                                                                    <Setter Property="Foreground" Value="#FF333333"/>
                                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                                    <Setter Property="BorderBrush" Value="#FF606060"/>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="Padding" Value="10,1"/>
                                                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                                    <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                    <Setter Property="FontSize" Value="14"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <Grid>
                                                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                    </Border>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FF569DE5"/>
                                                                                        <Setter Property="Background" Value="#FFE5F0FC"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" Value="#FF0071BC"/>
                                                                                        <Setter Property="Foreground" Value="White"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Foreground" Value="#FFA5A5A5"/>
                                                                                        <Setter Property="Background" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FFA5A5A5"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                        <Button x:Name="SpellingPaneChangeAllButton" Content="{Binding SpellingPaneChangeAll}" Grid.Column="1" CommandParameter="{Binding SelectedValue, ElementName=SpellingPaneSuggestionListBox}" Command="syncfusion:SfRichTextBoxAdv.ChangeAllSpellingCommand" Margin="15,0,0,0">
                                                            <Button.Style>
                                                                <Style TargetType="{x:Type Button}">
                                                                    <Setter Property="Background" Value="#FFF7F7F7"/>
                                                                    <Setter Property="Foreground" Value="#FF333333"/>
                                                                    <Setter Property="FontWeight" Value="Normal"/>
                                                                    <Setter Property="BorderBrush" Value="#FF606060"/>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="Padding" Value="10,1"/>
                                                                    <Setter Property="HorizontalAlignment" Value="Left"/>
                                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                                    <Setter Property="FontFamily" Value="Segoe UI"/>
                                                                    <Setter Property="FontSize" Value="14"/>
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                                <Grid>
                                                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                                                                        <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                    </Border>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FF569DE5"/>
                                                                                        <Setter Property="Background" Value="#FFE5F0FC"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsPressed" Value="True">
                                                                                        <Setter Property="Background" Value="#FF0071BC"/>
                                                                                        <Setter Property="Foreground" Value="White"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                                        <Setter Property="Foreground" Value="#FFA5A5A5"/>
                                                                                        <Setter Property="Background" Value="White"/>
                                                                                        <Setter Property="BorderBrush" TargetName="Border" Value="#FFA5A5A5"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                    </Grid>
                                                </Grid>
                                            </Grid>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </syncfusion:SfRichTextBoxAdv.Resources>
                    <syncfusion:SfRichTextBoxAdv.EditorSettings>
                        <syncfusion:EditorSettings/>
                    </syncfusion:SfRichTextBoxAdv.EditorSettings>
                </syncfusion:SfRichTextBoxAdv>
                <Border x:Name="NotebookTabBorder" BorderThickness="1" Margin="0,0,0,0" CornerRadius="4">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF999898" Offset="1"/>
                            <GradientStop Color="White"/>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="{DynamicResource {x:Static SystemColors.ControlLightColorKey}}" Offset="0.179"/>
                            <GradientStop Color="#FFA2A2A2" Offset="0.838"/>
                            <GradientStop Color="#FFF3F3F3" Offset="0.111"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <TabControl x:Name="NotebookTabControl" Grid.Row="0" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0" MaxWidth="{Binding ActualWidth, ElementName=notebookGrid, Mode=OneWay}" Foreground="{x:Null}" Margin="-1,-1,-1,-2" Padding="2,0">
                        <TabItem x:Name="NotebookHomeTab" Header="Home" FontFamily="Lucida Sans" FontSize="12" Background="{DynamicResource ComboBox.Disabled.Editable.Background}" BorderBrush="{DynamicResource ComboBox.Static.Border}" Margin="0,-2,0,0" VerticalAlignment="Bottom" VerticalContentAlignment="Center" >
                            <Border Background="White" BorderThickness="1" CornerRadius="3" Padding="1" Margin="-2,0" BorderBrush="#FFACACAC" Height="49">
                                <Grid MaxHeight="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,-1,0,0" >
                                    <Grid x:Name="FontTools" Width="180" HorizontalAlignment="Left" VerticalAlignment="Top" Height="45" Margin="2,0,0,-1">
                                        <WrapPanel Height="24" VerticalAlignment="Top" Margin="0" Width="180">
                                            <ComboBox x:Name="FontFamilyPicker" 
                                          SelectedItem="{Binding Selection.CharacterFormat.FontFamily, ElementName=Notebook, Mode=TwoWay}" 
                                          Padding="3,0,0,0" 
                                          Margin="2,2,0,0"  
                                          Focusable="False" 
                                          Height="21" Width="121"
                                          ItemsSource="{Binding FontFamilySource}"
                                          VerticalAlignment="Center"  HorizontalAlignment="Left" 
                                          ItemTemplate="{DynamicResource FontFamilyList}" 
                                          SelectionChanged="FontFamilyPicker_SelectionChanged" 
                                          Style="{DynamicResource ComboBoxToggleFontHeaderStyle}" FontSize="12" VerticalContentAlignment="Center" ItemContainerStyle="{DynamicResource ComboBoxToggleFontItemContainerStyle}">
                                            </ComboBox>
                                            <ComboBox x:Name="FontSizePicker" 
                                            Margin="2,2,0,0" 
                                            Padding="3,1,2,0" 
                                            IsTabStop="False" 
                                            Width="53" Height="21" 
                                            SelectedIndex="3" 
                                            ItemsSource="{Binding FontSizeSource}"
                                            SelectedValue="{Binding Selection.CharacterFormat.FontSize, ElementName=Notebook, Mode=TwoWay}"
                                            HorizontalAlignment="Left" VerticalAlignment="Top" 
                                            Style="{DynamicResource ComboBoxToggleFontHeaderStyle}"
                                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14" Background="{x:Null}" ScrollViewer.CanContentScroll="False" ItemContainerStyle="{DynamicResource ComboBoxToggleFontItemContainerStyle}">
                                            </ComboBox>
                                        </WrapPanel>
                                        <WrapPanel Width="180" HorizontalAlignment="Left" VerticalAlignment="Bottom" Height="22" d:LayoutOverrides="VerticalAlignment" Margin="0,0,0,-1" >
                                            <SfTools:ButtonAdv x:Name="NoteBoldButton" 
                                       Margin="2,0,0,0" 
                                       Focusable="False" 
                                       SizeMode="Small" 
                                       IsCheckable="True" 
                                       IsChecked="{Binding Selection.CharacterFormat.Bold, ElementName=Notebook, Mode=TwoWay}" 
                                       DataContext="{Binding ElementName=Notebook, Mode=OneWay}" 
                                       IconTemplate="{DynamicResource IconBoldTemplate}" 
                                        Width="18" Height="21" 
                                       VerticalAlignment="Center"  HorizontalAlignment="Center"
                                       Style="{DynamicResource ButtonStyleNotebook}" IconHeight="18" IconWidth="18" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="Black"  >
                                                <SfTools:ButtonAdv.Resources>
                                                    <DataTemplate x:Key="IconBoldTemplate">
                                                        <Grid Margin="0" >
                                                            <TextBlock 
                                                    Text="B"
                                                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                    TextWrapping="Wrap" 
                                                    FontSize="18" 
                                                    FontWeight="Bold" 
                                                    FontFamily="Bell MT" 
                                                    TextAlignment="Center" 
                                                    Width="18" Height="18"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </SfTools:ButtonAdv.Resources>
                                            </SfTools:ButtonAdv>
                                            <SfTools:ButtonAdv x:Name="NoteItalicButton" 
                                       Margin="-1,0,0,0" 
                                       Focusable="False" 
                                       SizeMode="Small" 
                                       IsCheckable="True"
                                       IsChecked="{Binding Selection.CharacterFormat.Italic, ElementName=Notebook, Mode=TwoWay}" 
                                       DataContext="{Binding ElementName=Notebook, Mode=OneWay}" 
                                       IconTemplate="{DynamicResource IconItalicTemplate}" 
                                       Width="18" Height="21" 
                                       VerticalAlignment="Center" HorizontalAlignment="Left" 
                                       Style="{DynamicResource ButtonStyleNotebook}" Padding="0" Foreground="Black" >
                                                <SfTools:ButtonAdv.Resources>
                                                    <DataTemplate x:Key="IconItalicTemplate">
                                                        <Grid Margin="0">
                                                            <TextBlock 
                                                    Text="I" 
                                                    FontStyle="Italic" 
                                                    HorizontalAlignment="Center" 
                                                    TextWrapping="Wrap" 
                                                    VerticalAlignment="Center" 
                                                    FontSize="18" 
                                                    FontWeight="Normal" 
                                                    FontFamily="Bell MT" Height="18" Width="10" d:LayoutOverrides="TopMargin, BottomMargin"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </SfTools:ButtonAdv.Resources>
                                            </SfTools:ButtonAdv>
                                            <SfTools:ButtonAdv x:Name="NoteUnderlineButton" 
                                       Margin="-1,0,0,0" 
                                       Focusable="False" 
                                       SizeMode="Small" 
                                       IsCheckable="True"
                                       DataContext="{DynamicResource UnderlineToggleConverter}" 
                                       IconTemplate="{DynamicResource IconUnderlineTemplate}" 
                                       Width="18" Height="21" 
                                       VerticalAlignment="Center" HorizontalAlignment="Left"
                                       Style="{DynamicResource ButtonStyleNotebook}"
                                       Padding="0" Foreground="Black">
                                                <SfTools:ButtonAdv.Resources>
                                                    <DataTemplate x:Key="IconUnderlineTemplate">
                                                        <Grid Margin="0,0,0,0" >
                                                            <TextBlock 
                                                    Text="U"  
                                                    HorizontalAlignment="Center" VerticalAlignment="Center"
                                                    TextWrapping="Wrap" 
                                                    FontSize="17" 
                                                    FontFamily="Bell MT" 
                                                    FontWeight="Normal" 
                                                    TextDecorations="Underline"
                                                    Height="18"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </SfTools:ButtonAdv.Resources>
                                                <SfTools:ButtonAdv.IsChecked>
                                                    <Binding Converter="{StaticResource UnderlineToggleConverter}" ElementName="Notebook" Mode="TwoWay" Path="Selection.CharacterFormat.Underline"/>
                                                </SfTools:ButtonAdv.IsChecked>
                                            </SfTools:ButtonAdv>
                                            <SfTools:ButtonAdv x:Name="NoteStrikeThruButton" 
                                       Margin="-1,0,-5,0" 
                                       Focusable="False"
                                       SizeMode="Small" 
                                       IsCheckable="True"
                                       DataContext="{Binding ElementName=Notebook, Mode=OneWay}"
                                       IconTemplate="{DynamicResource IconStrikeThruTemplate}"
                                       Width="18" Height="21"
                                       VerticalAlignment="Center" HorizontalAlignment="Left"
                                       Style="{DynamicResource ButtonStyleNotebook}" Foreground="Black" >
                                                <SfTools:ButtonAdv.Resources>
                                                    <DataTemplate x:Key="IconStrikeThruTemplate">
                                                        <Grid Margin="0,1,0,0" >
                                                            <TextBlock 
                                                    Text="S" 
                                                    VerticalAlignment="Center" HorizontalAlignment="Center"
                                                    TextWrapping="Wrap" 
                                                    FontSize="18"
                                                    FontFamily="Bell MT"
                                                    FontWeight="Normal" 
                                                    TextDecorations="Strikethrough"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </SfTools:ButtonAdv.Resources>
                                                <SfTools:ButtonAdv.IsChecked>
                                                    <Binding Converter="{StaticResource SingleStrikeThroughToggleConverter}" ElementName="Notebook" Mode="TwoWay" Path="Selection.CharacterFormat.StrikeThrough"/>
                                                </SfTools:ButtonAdv.IsChecked>
                                            </SfTools:ButtonAdv>
                                            <Separator Height="3" Width="15" RenderTransformOrigin="0.5,0.5" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                <Separator.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform Angle="90"/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Separator.RenderTransform>
                                            </Separator>
                                            <SfTools:ButtonAdv x:Name="NoteSuperScriptButton" 
                                       Margin="-5,0,-2,0" 
                                       Focusable="False"
                                       SizeMode="Small"
                                       DataContext="{Binding ElementName=Notebook, Mode=OneWay}"
                                       IconTemplate="{DynamicResource IconSuperscriptTemplate}"
                                       Width="18" Height="21"
                                       VerticalAlignment="Center" HorizontalAlignment="Left"
                                       Style="{DynamicResource ButtonStyleNotebook}" Foreground="Black" Click="NoteSuperScriptButton_Click" IsEnabled="False" >
                                                <SfTools:ButtonAdv.Resources>
                                                    <DataTemplate x:Key="IconSuperscriptTemplate">
                                                        <Grid Margin="0,0,0,0" >
                                                            <TextBlock 
                                                    Text="S" 
                                                    VerticalAlignment="Center" HorizontalAlignment="Center"
                                                    TextWrapping="Wrap" 
                                                    FontSize="16"
                                                    FontFamily="Bell MT"
                                                    FontWeight="Normal" >
                                                    <Run Text="2"  FontSize="8" BaselineAlignment="Superscript"/>
                                                            </TextBlock>
                                                        </Grid>
                                                    </DataTemplate>
                                                </SfTools:ButtonAdv.Resources>
                                            </SfTools:ButtonAdv>
                                            <SfTools:ButtonAdv x:Name="NoteSubScriptButton" 
                                       Margin="0,0,-5,0" 
                                       Focusable="False"
                                       SizeMode="Small"
                                       DataContext="{Binding ElementName=Notebook, Mode=OneWay}"
                                       IconTemplate="{DynamicResource IconSubscriptTemplate}"
                                       Width="18" Height="21"
                                       VerticalAlignment="Center" HorizontalAlignment="Left"
                                       Style="{DynamicResource ButtonStyleNotebook}" Foreground="Black" Click="NoteSubScriptButton_Click" IsEnabled="False" >
                                                <SfTools:ButtonAdv.Resources>
                                                    <DataTemplate x:Key="IconSubscriptTemplate">
                                                        <Grid Margin="0,2,0,0" >
                                                            <TextBlock 
                                                    Text="S" 
                                                    VerticalAlignment="Center" HorizontalAlignment="Center"
                                                    TextWrapping="Wrap" 
                                                    FontSize="16"
                                                    FontFamily="Bell MT"
                                                    FontWeight="Normal" >
                                                    <Run Text="2"  FontSize="8" BaselineAlignment="Subscript"/>
                                                            </TextBlock>
                                                        </Grid>
                                                    </DataTemplate>
                                                </SfTools:ButtonAdv.Resources>
                                            </SfTools:ButtonAdv>
                                            <Separator Height="3" Width="15" RenderTransformOrigin="0.5,0.5" Margin="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                <Separator.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform Angle="90"/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </Separator.RenderTransform>
                                            </Separator>
                                            <SfTools:ColorPickerPalette x:Name="NoteFontColorPicker" 
                                               Margin="-3,0,2,0" 
                                                Mode="Split" 
                                                Color="{Binding Selection.CharacterFormat.FontColor, ElementName=Notebook, Mode=TwoWay}" 
                                                DataContext="{Binding ElementName=Notebook, Mode=OneWay}" 
                                                Icon="pack://application:,,,/Icons/FontColorIcon.png"
                                                IconSize="16,16" 
                                                Width="32" Height="21" 
                                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                                HeaderTemplate="{DynamicResource NoteFontColorBtnStyle}" 
                                                Style="{DynamicResource ColorPickerButtonStyle}" 
                                                Padding="0" 
                                                UseLayoutRounding="True" 
                                                Background="{x:Null}" 
                                                HorizontalContentAlignment="Center" VerticalContentAlignment="Center" GenerateStandardVariants="True" Themes="Apex" SelectedCommand="{Binding Selection.CharacterFormat.FontColor}" >
                                                <SfTools:ColorPickerPalette.Resources>
                                                    <DataTemplate x:Key="NoteFontColorBtnStyle">
                                                        <Grid x:Name="IconGrid" Margin="0" Width="Auto" Height="Auto" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" HorizontalAlignment="Center">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto"/>
                                                                <RowDefinition x:Name="colorborder_row" Height="*"/>
                                                            </Grid.RowDefinitions>
                                                            <Image x:Name="image" Source="{Binding Icon, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type SfTools:ColorPickerPalette}}, UpdateSourceTrigger=PropertyChanged}" 
                                                       HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                                       Margin="3,2,1,0"/>
                                                            <Border x:Name="color_border" Grid.Row="1" Height="2" VerticalAlignment="Center" HorizontalAlignment="Left" Width="17" Margin="0,1" ToolTip="Font Color">
                                                                <Border.Background>
                                                                    <SolidColorBrush Color="{Binding Color, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type SfTools:ColorPickerPalette}}, UpdateSourceTrigger=PropertyChanged}"/>
                                                                </Border.Background>
                                                            </Border>
                                                        </Grid>
                                                        <DataTemplate.Triggers>
                                                            <Trigger Property="Source" SourceName="image" Value="{x:Null}">
                                                                <Setter Property="Margin" TargetName="color_border" Value="4"/>
                                                            </Trigger>

                                                        </DataTemplate.Triggers>
                                                    </DataTemplate>
                                                </SfTools:ColorPickerPalette.Resources>
                                            </SfTools:ColorPickerPalette>
                                            <ComboBox x:Name="HighlighterPicker" SelectedItem="{Binding Selection.CharacterFormat.HighlightColor, ElementName=Notebook}" 
                                          HorizontalAlignment="Center" VerticalAlignment="Center" 
                                          FontFamily="Calibri Light" FontWeight="Light"  FontSize="10" 
                                          Padding="0,3"
                                          IsReadOnly="True" 
                                          Height="21" Width="28"
                                          Style="{DynamicResource HighlighterComboBoxStyle}"
                                          ItemContainerStyle="{DynamicResource Highlighteritemcontainerstyle}" 
                                          ItemsPanel="{DynamicResource HighlighterItemPanel}" 
                                          Background="White">
                                                <ComboBox.Resources>
                                                    <SolidColorBrush x:Name="BrightGreen" x:Key="BrightGreen" Color="#ff00ff00"/>
                                                    <ItemsPanelTemplate x:Key="HighlighterItemPanel">
                                                        <StackPanel IsItemsHost="True" />
                                                    </ItemsPanelTemplate>
                                                    <Style x:Key="Highlighteritemcontainerstyle" TargetType="{x:Type ComboBoxItem}">
                                                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                        <Setter Property="Padding" Value="4,1"/>
                                                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                        <Setter Property="Background" Value="Transparent"/>
                                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                                        <Setter Property="BorderThickness" Value="1"/>
                                                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                                            <ContentPresenter.ContentTemplate>
                                                                                <DataTemplate>
                                                                                    <Grid HorizontalAlignment="Left" Background="{Binding Resources.Key, ElementName=HighlighterPicker}">
                                                                                        <Rectangle Fill="{Binding BindingGroup.Name, RelativeSource={RelativeSource Self}}" Stroke="{DynamicResource BrightGreen}"/>
                                                                                        <TextBlock Background="{Binding Text, RelativeSource={RelativeSource Self}}" 
                                                                                                   FontWeight="Normal" HorizontalAlignment="Left" Height="14" 
                                                                                                   LineStackingStrategy="BlockLineHeight" Margin="0,0,0,-2" TextWrapping="WrapWithOverflow" 
                                                                                                   Text="{Binding Mode=OneWay}" VerticalAlignment="Top" Width="49" d:LayoutOverrides="LeftMargin, RightMargin">
                                                                                        </TextBlock>
                                                                                    </Grid>
                                                                                </DataTemplate>
                                                                            </ContentPresenter.ContentTemplate>
                                                                        </ContentPresenter>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsEnabled" Value="False">
                                                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsEnabled" Value="True">
                                                                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="#FF2C2C2C"/>
                                                                        </Trigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsSelected" Value="False"/>
                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                                <Condition Property="IsKeyboardFocused" Value="False"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}"/>
                                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}"/>
                                                                        </MultiTrigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsSelected" Value="True"/>
                                                                                <Condition Property="IsMouseOver" Value="False"/>
                                                                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}"/>
                                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}"/>
                                                                        </MultiTrigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsSelected" Value="True"/>
                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}"/>
                                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}"/>
                                                                        </MultiTrigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsSelected" Value="True"/>
                                                                                <Condition Property="IsMouseOver" Value="False"/>
                                                                                <Condition Property="IsKeyboardFocused" Value="False"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}"/>
                                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}"/>
                                                                        </MultiTrigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsSelected" Value="False"/>
                                                                                <Condition Property="IsMouseOver" Value="False"/>
                                                                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}"/>
                                                                        </MultiTrigger>
                                                                        <MultiTrigger>
                                                                            <MultiTrigger.Conditions>
                                                                                <Condition Property="IsSelected" Value="False"/>
                                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                                                            </MultiTrigger.Conditions>
                                                                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}"/>
                                                                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}"/>
                                                                        </MultiTrigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ComboBox.Resources>
                                                <syncfusion:HighlightColor>BrightGreen</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>Yellow</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>Turquoise</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>Pink</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>Blue</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>Red</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>DarkBlue</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>Teal</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>Green</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>Violet</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>DarkRed</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>DarkYellow</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>Gray50</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>Gray25</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>Black</syncfusion:HighlightColor>
                                                <syncfusion:HighlightColor>NoColor</syncfusion:HighlightColor>
                                            </ComboBox>
                                        </WrapPanel>
                                    </Grid>
                                    <Grid x:Name="ParagraphFormatTools" Margin="188,1,0,0" HorizontalAlignment="Left" Width="231" d:LayoutOverrides="LeftMargin, RightMargin">
                                        <WrapPanel Margin="6,0,0,23" Height="Auto" HorizontalAlignment="Left" Width="117">
                                            <SfTools:ButtonAdv x:Name="AlignLeftButton" 
                                       Margin="2,0,0,0" 
                                       Padding="0"  
                                       SizeMode="Small" 
                                       Focusable="False" 
                                       IsCheckable="True"  
                                       Width="18" Height="22" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                                       VerticalContentAlignment="Top"  HorizontalContentAlignment="Left"
                                       SmallIcon="pack://application:,,,/Icons/Icon feather-align-left.png" 
                                       IconHeight="12" IconWidth="12" 
                                       Style="{DynamicResource ButtonStyleNotebook}" ClipToBounds="True" IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Converter={StaticResource LeftAlignmentToggleConverter}, ElementName=Notebook, Mode=TwoWay}" />
                                            <SfTools:ButtonAdv x:Name="AlignCenterButton" 
                                       Margin="2,0,0,0"                        
                                       Padding="0"  
                                       SizeMode="Small" 
                                       Focusable="False" 
                                       IsCheckable="True"  
                                       Width="20" Height="22" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                                       VerticalContentAlignment="Top"  HorizontalContentAlignment="Left"
                                       SmallIcon="pack://application:,,,/Icons/Icon feather-align-center.png" 
                                       IconHeight="12" IconWidth="12" 
                                       Style="{DynamicResource ButtonStyleNotebook}" 
                                       IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Converter={StaticResource CenterAlignmentToggleConverter}, ElementName=Notebook, Mode=TwoWay}" />
                                            <SfTools:ButtonAdv x:Name="AlignRightButton"
                                       Margin="2,0,0,0"                        
                                       Padding="0"  
                                       SizeMode="Small" 
                                       Focusable="False" 
                                       IsCheckable="True"  
                                       Width="20" Height="22" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                                       VerticalContentAlignment="Top"  HorizontalContentAlignment="Left"
                                       SmallIcon="pack://application:,,,/Icons/Icon feather-align-right.png" 
                                       IconHeight="12" IconWidth="12"
                                       Style="{DynamicResource ButtonStyleNotebook}" 
                                       IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Converter={StaticResource RightAlignmentToggleConverter}, ElementName=Notebook, Mode=TwoWay}" />
                                            <SfTools:ButtonAdv x:Name="AlignJustifyButton"
                                       Margin="2,0,0,0"                        
                                       Padding="0"  
                                       SizeMode="Small" 
                                       Focusable="False" 
                                       IsCheckable="True"  
                                       Width="20" Height="22" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                                       VerticalContentAlignment="Top"  HorizontalContentAlignment="Left"
                                       SmallIcon="pack://application:,,,/Icons/Icon feather-align-justify.png" 
                                       IconHeight="12" IconWidth="12"
                                       Style="{DynamicResource ButtonStyleNotebook}" 
                                       IsChecked="{Binding Selection.ParagraphFormat.TextAlignment, Converter={StaticResource JustifyAlignmentToggleConverter}, ElementName=Notebook, Mode=TwoWay}" />
                                        </WrapPanel>
                                        <WrapPanel HorizontalAlignment="Left" Width="117" Height="22" VerticalAlignment="Bottom" Margin="6,0,0,0">
                                            <SfTools:ButtonAdv x:Name="ListBulletButton"
                                       Margin="2,0,0,0"                        
                                       Padding="0"  
                                       SizeMode="Small" 
                                       Focusable="False"  
                                       Width="20" Height="21" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                                       VerticalContentAlignment="Center"  HorizontalContentAlignment="Left"
                                       SmallIcon="pack://application:,,,/Icons/Icon metro-list2.png"
                                       IconHeight="12" IconWidth="12"
                                       Style="{DynamicResource ButtonStyleNotebook}"
                                       Click="ListBulletButton_Click" />
                                            <SfTools:ButtonAdv x:Name="ListNumberButton"
                                       Margin="2,0,0,0"                        
                                       Padding="0"  
                                       SizeMode="Small" 
                                       Focusable="False" 
                                       Width="20" Height="21" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                                       VerticalContentAlignment="Center"  HorizontalContentAlignment="Left"
                                       SmallIcon="pack://application:,,,/Icons/Icon metro-list-numbered.png"
                                       IconHeight="12" IconWidth="12"
                                       Style="{DynamicResource ButtonStyleNotebook}" 
                                       Click="ListNumberButton_Click" />
                                            <SfTools:ButtonAdv x:Name="IncreaseIndentButton"
                                       Margin="2,0,0,0"                        
                                       Padding="0"  
                                       SizeMode="Small" 
                                       Focusable="False" 
                                       Width="20" Height="21" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                                       VerticalContentAlignment="Center"  HorizontalContentAlignment="Left"
                                       SmallIcon="pack://application:,,,/Icons/indent-increase.png"
                                       IconHeight="12" IconWidth="12"
                                       Command="syncfusion:SfRichTextBoxAdv.IncreaseIndentCommand"
                                       CommandTarget="{Binding ElementName=Notebook}" 
                                       Style="{DynamicResource ButtonStyleNotebook}" />
                                            <SfTools:ButtonAdv x:Name="DecreaseIndentButton"
                                       Margin="2,0,0,0"                        
                                       Padding="0"  
                                       SizeMode="Small" 
                                       Focusable="False" 
                                       Width="20" Height="21" 
                                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                                       VerticalContentAlignment="Center"  HorizontalContentAlignment="Left"
                                       SmallIcon="pack://application:,,,/Icons/indent-decrease.png"
                                       IconHeight="12" IconWidth="12"
                                       Command="syncfusion:SfRichTextBoxAdv.DecreaseIndentCommand"
                                       CommandTarget="{Binding ElementName=Notebook}" 
                                       Style="{DynamicResource ButtonStyleNotebook}" />
                                        </WrapPanel>
                                    </Grid>
                                </Grid>
                            </Border>
                        </TabItem>
                        <TabItem x:Name="NotebookInsertTab" Header="Insert" FontFamily="Lucida Sans" FontSize="10" Margin="0" VerticalAlignment="Bottom" Height="18">
                            <Border Background="White" BorderThickness="1" CornerRadius="3" Padding="1" Margin="-2,0" BorderBrush="#FFACACAC">

                                <Grid Background="{DynamicResource ComboBox.Disabled.Editable.Background}">

                                    <WrapPanel x:Name="NotebookOtherMedia" Background="White" Margin="0,-1,179,0">
                                        <SfTools:ButtonAdv x:Name="InsertImageButton"
                                        Margin="2,2,0,0"                        
                                       Padding="0" 
                                       Focusable="False" 
                                       Width="20" 
                                       VerticalContentAlignment="Center"  HorizontalContentAlignment="Center"
                                       SmallIcon="pack://application:,,,/Icons/Image-Icon.png" 
                                       IconHeight="12" IconWidth="12" 
                                       Label="" 
                                       ToolTip="Insert image" 
                                       Height="21" FontSize="6" 
                                       UseLayoutRounding="True" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Command="syncfusion:SfRichTextBoxAdv.InsertPictureCommand" CommandTarget="{Binding ElementName=Notebook}" Style="{DynamicResource ButtonStyleNotebookInsert}" LargeIcon="Icons/Icon ionic-ios-images.png" SizeMode="Small"/>
                                        <SfTools:ButtonAdv x:Name="InsertTableButton"
                                        Margin="2,2,0,0"                        
                                       Padding="0" 
                                       Focusable="False" 
                                       Width="20" 
                                       VerticalContentAlignment="Center"  HorizontalContentAlignment="Center"
                                       SmallIcon="pack://application:,,,/Icons/Table-Icon.png" 
                                       IconHeight="12" IconWidth="12" 
                                       Label="" 
                                       ToolTip="Insert Table" 
                                       Height="21" FontSize="6" 
                                       UseLayoutRounding="True" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Command="syncfusion:SfRichTextBoxAdv.InsertTableCommand" CommandTarget="{Binding ElementName=Notebook}" Style="{DynamicResource ButtonStyleNotebookInsert}" LargeIcon="Icons/Icon ionic-ios-images.png" SizeMode="Small"/>
                                    </WrapPanel>
                                    <GroupBox x:Name="NotebookOtherViewSettings" Header="Page View Settings" AutomationProperties.IsColumnHeader="True" IsEnabled="False" HorizontalAlignment="Right" Width="179" Grid.Column="1" VerticalContentAlignment="Center">
                                        <WrapPanel Margin="0,0,0.333,-0.333">
                                            <CheckBox x:Name="NotebookOtherViewCont" 
                                      Content="Continuous" 
                                      Height="17" 
                                      VerticalAlignment="Center" 
                                      Margin="0,5,8,0" 
                                      FontStretch="Condensed" 
                                      Checked="NotebookOtherViewCont_Checked" ClickMode="Press" FontSize="8" HorizontalAlignment="Center" Padding="4,0,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                                <CheckBox.DataContext>
                                                    <syncfusion:LayoutType>Continuous</syncfusion:LayoutType>
                                                </CheckBox.DataContext>
                                            </CheckBox>
                                            <CheckBox x:Name="NotebookOtherViewCPages" 
                                      Content="Pages" 
                                      Height="17" 
                                      VerticalAlignment="Center" 
                                      Margin="0,5,6,0" 
                                      FontStretch="Condensed" 
                                     HorizontalAlignment="Center" Checked="NotebookOtherViewCPages_Checked" ClickMode="Press" IsChecked="{Binding BindsDirectlyToSource=True, IsAsync=True, Mode=OneWay, NotifyOnSourceUpdated=True}" Padding="4,0,0,0" FontSize="8" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
                                                <CheckBox.DataContext>
                                                    <syncfusion:LayoutType>Pages</syncfusion:LayoutType>
                                                </CheckBox.DataContext>
                                            </CheckBox>
                                        </WrapPanel>
                                    </GroupBox>
                                </Grid>
                            </Border>
                        </TabItem>
                    </TabControl>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Window>